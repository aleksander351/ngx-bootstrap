{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ngx-bootstrap/alert\";\n\nfunction DemoAlertDismissComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"alert\", 2);\n    i0.ɵɵlistener(\"onClosed\", function DemoAlertDismissComponent_div_0_Template_alert_onClosed_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const alert_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onClosed(alert_r1);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const alert_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", alert_r1.type)(\"dismissible\", ctx_r0.dismissible);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(alert_r1.msg);\n  }\n}\n\nexport let DemoAlertDismissComponent = /*#__PURE__*/(() => {\n  class DemoAlertDismissComponent {\n    constructor() {\n      this.dismissible = true;\n      this.defaultAlerts = [{\n        type: 'success',\n        msg: `You successfully read this important alert message.`\n      }, {\n        type: 'info',\n        msg: `This alert needs your attention, but it's not super important.`\n      }, {\n        type: 'danger',\n        msg: `Better check yourself, you're not looking too good.`\n      }];\n      this.alerts = this.defaultAlerts;\n    }\n\n    reset() {\n      this.alerts = this.defaultAlerts;\n    }\n\n    onClosed(dismissedAlert) {\n      this.alerts = this.alerts.filter(alert => alert !== dismissedAlert);\n    }\n\n  }\n\n  DemoAlertDismissComponent.ɵfac = function DemoAlertDismissComponent_Factory(t) {\n    return new (t || DemoAlertDismissComponent)();\n  };\n\n  DemoAlertDismissComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoAlertDismissComponent,\n    selectors: [[\"demo-alert-dismiss\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"type\", \"dismissible\", \"onClosed\"]],\n    template: function DemoAlertDismissComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DemoAlertDismissComponent_div_0_Template, 3, 3, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function DemoAlertDismissComponent_Template_button_click_1_listener() {\n          return ctx.dismissible = !ctx.dismissible;\n        });\n        i0.ɵɵtext(2, \"Toggle dismissible\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function DemoAlertDismissComponent_Template_button_click_3_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(4, \"Reset\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.alerts);\n      }\n    },\n    directives: [i1.NgForOf, i2.AlertComponent],\n    encapsulation: 2\n  });\n  return DemoAlertDismissComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}