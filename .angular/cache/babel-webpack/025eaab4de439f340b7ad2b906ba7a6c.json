{"ast":null,"code":"import { DemoTimepickerBasicComponent } from './demos/basic/basic';\nimport { DemoTimepickerMeridianComponent } from './demos/meridian/meridian';\nimport { DemoTimepickerCustomMeridianComponent } from './demos/custom-meridian/custom-meridian';\nimport { DemoTimepickerMinMaxComponent } from './demos/min-max/min-max';\nimport { DemoTimepickerPlaceholderComponent } from './demos/placeholder/placeholder';\nimport { DemoTimepickerToggleMinutesSecondsComponent } from './demos/toggle-minutes-seconds/toggle-minutes-seconds';\nimport { DemoTimepickerDisabledComponent } from './demos/disabled/disabled';\nimport { DemoTimepickerCustomComponent } from './demos/custom/custom';\nimport { DemoTimepickerCustomValidationComponent } from './demos/custom-validation/custom-validation';\nimport { DemoTimepickerDynamicComponent } from './demos/dynamic/dynamic';\nimport { DemoTimepickerMousewheelComponent } from './demos/mousewheel/mousewheel';\nimport { DemoTimepickerArrowkeysComponent } from './demos/arrowkeys/arrowkeys';\nimport { DemoTimepickerEmptyDateComponent } from './demos/empty-date/empty-date';\nimport { DemoTimepickerConfigComponent } from './demos/config/config';\nimport { DemoTimepickerReadonlyComponent } from './demos/readonly/readonly';\nimport { DemoTimepickerSpinnersComponent } from './demos/spinners/spinners';\nimport { ExamplesComponent } from '@ngx-bootstrap-doc/docs';\nimport { ApiSectionsComponent } from '@ngx-bootstrap-doc/docs';\nimport { NgApiDocComponent, NgApiDocConfigComponent } from '@ngx-bootstrap-doc/docs';\nimport { DemoTimepickerIsValidComponent } from './demos/isvalid/isvalid';\nimport { DemoTimepickerFormComponent } from './demos/form/form';\nexport const demoComponentContent = [{\n  name: 'Overview',\n  anchor: 'overview',\n  tabName: 'overview',\n  outlet: ExamplesComponent,\n  content: [{\n    title: 'Basic',\n    anchor: 'basic',\n    component: require('!!raw-loader!./demos/basic/basic'),\n    html: require('!!raw-loader!./demos/basic/basic.html'),\n    outlet: DemoTimepickerBasicComponent\n  }, {\n    title: 'Form',\n    anchor: 'form',\n    component: require('!!raw-loader!./demos/form/form'),\n    html: require('!!raw-loader!./demos/form/form.html'),\n    outlet: DemoTimepickerFormComponent\n  }, {\n    title: 'Meridian',\n    anchor: 'meridian',\n    component: require('!!raw-loader!./demos/meridian/meridian'),\n    html: require('!!raw-loader!./demos/meridian/meridian.html'),\n    outlet: DemoTimepickerMeridianComponent\n  }, {\n    title: 'Custom meridian',\n    anchor: 'custom-meridian',\n    component: require('!!raw-loader!./demos/custom-meridian/custom-meridian'),\n    html: require('!!raw-loader!./demos/custom-meridian/custom-meridian.html'),\n    description: `<p>Text in meridian labels can be customized by using <code>meridians</code> input property</p>`,\n    outlet: DemoTimepickerCustomMeridianComponent\n  }, {\n    title: 'Min - Max',\n    anchor: 'min-max',\n    component: require('!!raw-loader!./demos/min-max/min-max'),\n    html: require('!!raw-loader!./demos/min-max/min-max.html'),\n    outlet: DemoTimepickerMinMaxComponent\n  }, {\n    title: 'Toggle minutes/seconds',\n    anchor: 'toggleMinutesSeconds',\n    component: require('!!raw-loader!./demos/toggle-minutes-seconds/toggle-minutes-seconds'),\n    html: require('!!raw-loader!./demos/toggle-minutes-seconds/toggle-minutes-seconds.html'),\n    outlet: DemoTimepickerToggleMinutesSecondsComponent\n  }, {\n    title: 'Disabled',\n    anchor: 'disabled',\n    component: require('!!raw-loader!./demos/disabled/disabled'),\n    html: require('!!raw-loader!./demos/disabled/disabled.html'),\n    outlet: DemoTimepickerDisabledComponent\n  }, {\n    title: 'Readonly',\n    anchor: 'readonly',\n    component: require('!!raw-loader!./demos/readonly/readonly'),\n    html: require('!!raw-loader!./demos/readonly/readonly.html'),\n    outlet: DemoTimepickerReadonlyComponent\n  }, {\n    title: 'Custom steps',\n    anchor: 'custom',\n    component: require('!!raw-loader!./demos/custom/custom'),\n    html: require('!!raw-loader!./demos/custom/custom.html'),\n    outlet: DemoTimepickerCustomComponent\n  }, {\n    title: 'Custom validation',\n    anchor: 'custom-validation',\n    component: require('!!raw-loader!./demos/custom-validation/custom-validation'),\n    html: require('!!raw-loader!./demos/custom-validation/custom-validation.html'),\n    outlet: DemoTimepickerCustomValidationComponent\n  }, {\n    title: 'Custom validation with isValid event',\n    anchor: 'isvalid',\n    component: require('!!raw-loader!./demos/isvalid/isvalid'),\n    html: require('!!raw-loader!./demos/isvalid/isvalid.html'),\n    description: `<p><code>isValid</code> event emits true if a value is a valid data.\n            Enter an invalid data to see error</p>`,\n    outlet: DemoTimepickerIsValidComponent\n  }, {\n    title: 'Dynamic',\n    anchor: 'dynamic',\n    component: require('!!raw-loader!./demos/dynamic/dynamic'),\n    html: require('!!raw-loader!./demos/dynamic/dynamic.html'),\n    outlet: DemoTimepickerDynamicComponent\n  }, {\n    title: 'Mouse wheel',\n    anchor: 'mouse-wheel',\n    component: require('!!raw-loader!./demos/mousewheel/mousewheel'),\n    html: require('!!raw-loader!./demos/mousewheel/mousewheel.html'),\n    outlet: DemoTimepickerMousewheelComponent\n  }, {\n    title: 'Empty date',\n    anchor: 'empty-date',\n    component: require('!!raw-loader!./demos/empty-date/empty-date'),\n    html: require('!!raw-loader!./demos/empty-date/empty-date.html'),\n    outlet: DemoTimepickerEmptyDateComponent\n  }, {\n    title: 'Arrow keys',\n    anchor: 'arrow keys',\n    component: require('!!raw-loader!./demos/arrowkeys/arrowkeys'),\n    html: require('!!raw-loader!./demos/arrowkeys/arrowkeys.html'),\n    outlet: DemoTimepickerArrowkeysComponent\n  }, {\n    title: 'Spinners',\n    anchor: 'spinners',\n    component: require('!!raw-loader!./demos/spinners/spinners'),\n    html: require('!!raw-loader!./demos/spinners/spinners.html'),\n    outlet: DemoTimepickerSpinnersComponent\n  }, {\n    title: 'Placeholder',\n    anchor: 'placeholder',\n    component: require('!!raw-loader!./demos/placeholder/placeholder'),\n    html: require('!!raw-loader!./demos/placeholder/placeholder.html'),\n    outlet: DemoTimepickerPlaceholderComponent\n  }, {\n    title: 'Configuring defaults',\n    anchor: 'config-defaults',\n    component: require('!!raw-loader!./demos/config/config'),\n    html: require('!!raw-loader!./demos/config/config.html'),\n    outlet: DemoTimepickerConfigComponent\n  }]\n}, {\n  name: 'Installation',\n  anchor: 'api-reference',\n  tabName: 'api',\n  outlet: ApiSectionsComponent,\n  usage: require('!!raw-loader!./docs/usage.md'),\n  importInfo: '<span class=\"pln\">ng add ngx</span><span class=\"pun\">-</span><span class=\"pln\">bootstrap </span> --component <span class=\"pln\">timepicker</span>',\n  content: [{\n    title: 'TimepickerComponent',\n    anchor: 'timepicker-component',\n    outlet: NgApiDocComponent\n  }, {\n    title: 'TimepickerConfig',\n    anchor: 'timepicker-config',\n    outlet: NgApiDocConfigComponent\n  }]\n}, {\n  name: 'Examples',\n  anchor: 'examples',\n  tabName: 'examples',\n  outlet: ExamplesComponent,\n  content: [{\n    title: 'Basic',\n    anchor: 'basic-ex',\n    outlet: DemoTimepickerBasicComponent\n  }, {\n    title: 'Form',\n    anchor: 'form-ex',\n    outlet: DemoTimepickerFormComponent\n  }, {\n    title: 'Meridian',\n    anchor: 'meridian-ex',\n    outlet: DemoTimepickerMeridianComponent\n  }, {\n    title: 'Custom meridian',\n    anchor: 'custom-meridian-ex',\n    outlet: DemoTimepickerCustomMeridianComponent\n  }, {\n    title: 'Min - Max',\n    anchor: 'min-max-ex',\n    outlet: DemoTimepickerMinMaxComponent\n  }, {\n    title: 'Toggle minutes/seconds',\n    anchor: 'toggleMinutesSeconds-ex',\n    outlet: DemoTimepickerToggleMinutesSecondsComponent\n  }, {\n    title: 'Disabled',\n    anchor: 'disabled-ex',\n    outlet: DemoTimepickerDisabledComponent\n  }, {\n    title: 'Readonly',\n    anchor: 'readonly-ex',\n    outlet: DemoTimepickerReadonlyComponent\n  }, {\n    title: 'Custom steps',\n    anchor: 'custom-ex',\n    outlet: DemoTimepickerCustomComponent\n  }, {\n    title: 'Custom validation',\n    anchor: 'custom-validation-ex',\n    outlet: DemoTimepickerCustomValidationComponent\n  }, {\n    title: 'Custom validation with isValid event',\n    anchor: 'isvalid-ex',\n    outlet: DemoTimepickerIsValidComponent\n  }, {\n    title: 'Dynamic',\n    anchor: 'dynamic-ex',\n    outlet: DemoTimepickerDynamicComponent\n  }, {\n    title: 'Mouse wheel',\n    anchor: 'mouse-wheel-ex',\n    outlet: DemoTimepickerMousewheelComponent\n  }, {\n    title: 'Empty date',\n    anchor: 'empty-date-ex',\n    outlet: DemoTimepickerEmptyDateComponent\n  }, {\n    title: 'Arrow keys',\n    anchor: 'arrow keys-ex',\n    outlet: DemoTimepickerArrowkeysComponent\n  }, {\n    title: 'Spinners',\n    anchor: 'spinners-ex',\n    outlet: DemoTimepickerSpinnersComponent\n  }, {\n    title: 'Placeholder',\n    anchor: 'placeholder-ex',\n    outlet: DemoTimepickerPlaceholderComponent\n  }, {\n    title: 'Configuring defaults',\n    anchor: 'config-defaults-ex',\n    outlet: DemoTimepickerConfigComponent\n  }]\n}];","map":null,"metadata":{},"sourceType":"module"}