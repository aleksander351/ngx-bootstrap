{"ast":null,"code":"import { TimepickerConfig } from 'ngx-bootstrap/timepicker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/timepicker\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction DemoTimepickerEmptyDateComponent_pre_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"pre\", 4);\n    i0.ɵɵtext(1, \"Invalid time format\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport function getTimepickerConfig() {\n  return Object.assign(new TimepickerConfig(), {\n    allowEmptyTime: true\n  });\n}\nexport let DemoTimepickerEmptyDateComponent = /*#__PURE__*/(() => {\n  class DemoTimepickerEmptyDateComponent {\n    constructor() {\n      this.allowEmptyTime = true;\n      this.myTime = new Date();\n    }\n\n    clear() {\n      this.myTime = void 0;\n    }\n\n  }\n\n  DemoTimepickerEmptyDateComponent.ɵfac = function DemoTimepickerEmptyDateComponent_Factory(t) {\n    return new (t || DemoTimepickerEmptyDateComponent)();\n  };\n\n  DemoTimepickerEmptyDateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoTimepickerEmptyDateComponent,\n    selectors: [[\"demo-timepicker-empty-date\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TimepickerConfig,\n      useFactory: getTimepickerConfig\n    }])],\n    decls: 7,\n    vars: 3,\n    consts: [[3, \"ngModel\", \"ngModelChange\", \"isValid\"], [1, \"alert\", \"alert-info\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n    template: function DemoTimepickerEmptyDateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"timepicker\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function DemoTimepickerEmptyDateComponent_Template_timepicker_ngModelChange_0_listener($event) {\n          return ctx.myTime = $event;\n        })(\"isValid\", function DemoTimepickerEmptyDateComponent_Template_timepicker_isValid_0_listener($event) {\n          return ctx.isValid = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"hr\");\n        i0.ɵɵelementStart(2, \"pre\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DemoTimepickerEmptyDateComponent_pre_4_Template, 2, 0, \"pre\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DemoTimepickerEmptyDateComponent_Template_button_click_5_listener() {\n          return ctx.clear();\n        });\n        i0.ɵɵtext(6, \"Clear\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.myTime);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Time is: \", ctx.myTime, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isValid);\n      }\n    },\n    directives: [i1.TimepickerComponent, i2.NgControlStatus, i2.NgModel, i3.NgIf],\n    encapsulation: 2\n  });\n  return DemoTimepickerEmptyDateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}