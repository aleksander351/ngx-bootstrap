{"ast":null,"code":"import { isSameYear, shiftDate } from 'ngx-bootstrap/chronos';\nimport { isDisabledDate, isEnabledDate, isYearDisabled } from '../utils/bs-calendar-utils';\nexport function flagYearsCalendar(yearsCalendar, options) {\n  yearsCalendar.years.forEach((years, rowIndex) => {\n    years.forEach((year, yearIndex) => {\n      let isSelected;\n      const isHovered = isSameYear(year.date, options.hoveredYear);\n      const isDisabled = options.isDisabled || isDisabledDate(year.date, options.datesDisabled, 'year') || isEnabledDate(year.date, options.datesEnabled, 'year') || isYearDisabled(year.date, options.minDate, options.maxDate);\n\n      if (!options.selectedDate && options.selectedRange) {\n        isSelected = isSameYear(year.date, options.selectedRange[0]);\n\n        if (!isSelected) {\n          isSelected = isSameYear(year.date, options.selectedRange[1]);\n        }\n      } else {\n        isSelected = isSameYear(year.date, options.selectedDate);\n      }\n\n      const newMonth = Object.assign(\n      /*{},*/\n      year, {\n        isHovered,\n        isDisabled,\n        isSelected\n      });\n\n      if (year.isHovered !== newMonth.isHovered || year.isDisabled !== newMonth.isDisabled || year.isSelected !== newMonth.isSelected) {\n        yearsCalendar.years[rowIndex][yearIndex] = newMonth;\n      }\n    });\n  }); // todo: add check for linked calendars\n\n  yearsCalendar.hideLeftArrow = !!options.yearIndex && options.yearIndex > 0 && options.yearIndex !== options.displayMonths;\n  yearsCalendar.hideRightArrow = !!options.yearIndex && !!options.displayMonths && options.yearIndex < options.displayMonths && options.yearIndex + 1 !== options.displayMonths;\n  yearsCalendar.disableLeftArrow = isYearDisabled(shiftDate(yearsCalendar.years[0][0].date, {\n    year: -1\n  }), options.minDate, options.maxDate);\n  const i = yearsCalendar.years.length - 1;\n  const j = yearsCalendar.years[i].length - 1;\n  yearsCalendar.disableRightArrow = isYearDisabled(shiftDate(yearsCalendar.years[i][j].date, {\n    year: 1\n  }), options.minDate, options.maxDate);\n  return yearsCalendar;\n}","map":null,"metadata":{},"sourceType":"module"}