{"ast":null,"code":"import { TimepickerConfig } from 'ngx-bootstrap/timepicker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/timepicker\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction DemoTimepickerDynamicComponent_pre_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"pre\", 5);\n    i0.ɵɵtext(1, \"Invalid time format\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport function getTimepickerConfig() {\n  return Object.assign(new TimepickerConfig(), {\n    allowEmptyTime: true\n  });\n}\nexport let DemoTimepickerDynamicComponent = /*#__PURE__*/(() => {\n  class DemoTimepickerDynamicComponent {\n    constructor() {\n      this.mytime = new Date();\n    }\n\n    update() {\n      const time = new Date();\n      time.setHours(14);\n      time.setMinutes(0);\n      this.mytime = time;\n    }\n\n    changed() {\n      console.log(`Time changed to: ${this.mytime}`);\n    }\n\n    clear() {\n      this.mytime = void 0;\n    }\n\n  }\n\n  DemoTimepickerDynamicComponent.ɵfac = function DemoTimepickerDynamicComponent_Factory(t) {\n    return new (t || DemoTimepickerDynamicComponent)();\n  };\n\n  DemoTimepickerDynamicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoTimepickerDynamicComponent,\n    selectors: [[\"demo-timepicker-dynamic\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TimepickerConfig,\n      useFactory: getTimepickerConfig\n    }])],\n    decls: 8,\n    vars: 3,\n    consts: [[3, \"ngModel\", \"ngModelChange\", \"isValid\"], [1, \"alert\", \"alert-info\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n    template: function DemoTimepickerDynamicComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"timepicker\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function DemoTimepickerDynamicComponent_Template_timepicker_ngModelChange_0_listener($event) {\n          return ctx.mytime = $event;\n        })(\"ngModelChange\", function DemoTimepickerDynamicComponent_Template_timepicker_ngModelChange_0_listener() {\n          return ctx.changed();\n        })(\"isValid\", function DemoTimepickerDynamicComponent_Template_timepicker_isValid_0_listener($event) {\n          return ctx.isValid = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"pre\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, DemoTimepickerDynamicComponent_pre_3_Template, 2, 0, \"pre\", 2);\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function DemoTimepickerDynamicComponent_Template_button_click_4_listener() {\n          return ctx.update();\n        });\n        i0.ɵɵtext(5, \"Set to 14:00\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DemoTimepickerDynamicComponent_Template_button_click_6_listener() {\n          return ctx.clear();\n        });\n        i0.ɵɵtext(7, \"Clear\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.mytime);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Time is: \", ctx.mytime, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isValid);\n      }\n    },\n    directives: [i1.TimepickerComponent, i2.NgControlStatus, i2.NgModel, i3.NgIf],\n    encapsulation: 2\n  });\n  return DemoTimepickerDynamicComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}