{"ast":null,"code":"import { ElementRef, QueryList, Renderer2, SimpleChanges } from \"@angular/core\";\nimport { DOCUMENT } from '@angular/common';\nimport { ContentSection } from '../../models/content-section.model';\nimport { Router } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"scrollElement\"];\n\nconst _c1 = function (a0) {\n  return {\n    tab: a0\n  };\n};\n\nfunction AddNavComponent_div_0_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"a\", 5, 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sub_componentContent_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(5, _c1, ctx_r2._componentContent == null ? null : ctx_r2._componentContent.name))(\"fragment\", sub_componentContent_r3.anchor);\n    i0.ɵɵattribute(\"data-tab\", ctx_r2._componentContent == null ? null : ctx_r2._componentContent.name)(\"data-anchor\", sub_componentContent_r3.anchor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sub_componentContent_r3.title);\n  }\n}\n\nfunction AddNavComponent_div_0_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, AddNavComponent_div_0_ul_3_li_1_Template, 4, 7, \"li\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1._componentContent == null ? null : ctx_r1._componentContent.content);\n  }\n}\n\nfunction AddNavComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function AddNavComponent_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.goToSection($event);\n    });\n    i0.ɵɵelementStart(1, \"a\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AddNavComponent_div_0_ul_3_Template, 2, 1, \"ul\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/\", ctx_r0._componentContent == null ? null : ctx_r0._componentContent.parentRouteTitle, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0._componentContent == null ? null : ctx_r0._componentContent.parentRouteTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0._componentContent == null ? null : ctx_r0._componentContent.content) && (ctx_r0._componentContent == null ? null : ctx_r0._componentContent.content == null ? null : ctx_r0._componentContent.content.length));\n  }\n}\n\nexport let AddNavComponent = /*#__PURE__*/(() => {\n  class AddNavComponent {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(document, _renderer, router) {\n      this.document = document;\n      this._renderer = _renderer;\n      this.router = router;\n    }\n\n    onScrollEvent() {\n      this.initActiveMenuTab();\n    }\n\n    ngOnChanges(changes) {\n      if (changes === null || changes === void 0 ? void 0 : changes.componentContent) {\n        this._componentContent = this.mapComponentContent(changes.componentContent.currentValue);\n\n        if (!(changes === null || changes === void 0 ? void 0 : changes.componentContent.firstChange)) {\n          this.setScrollAttributes();\n        }\n      }\n    }\n\n    mapComponentContent(component) {\n      const parentRoute = this.router.parseUrl(this.router.url).root.children.primary.segments[0].path;\n      return {\n        name: component.tabName,\n        parentRouteTitle: parentRoute,\n        content: Array.isArray(component.content) ? component.content.map(cont => ({\n          anchor: cont.anchor,\n          title: cont.title\n        })) : []\n      };\n    }\n\n    goToSection(event) {\n      const item = event.target;\n\n      if (item.dataset.anchor) {\n        this.goToSectionWIthAnchor(item.dataset.anchor);\n      }\n    }\n\n    goToSectionWIthAnchor(anchor) {\n      if (!anchor) {\n        return;\n      }\n\n      const target = this.document.getElementById(anchor);\n      const header = this.document.getElementById('header');\n\n      if (target && header) {\n        setTimeout(() => {\n          const targetPosY = target.offsetTop - header.offsetHeight - 6;\n          window.scrollTo({\n            top: targetPosY,\n            behavior: 'smooth'\n          });\n        }, 100);\n      }\n    }\n\n    initActiveMenuTab() {\n      var _a;\n\n      if ((_a = this.scrollElementsList) === null || _a === void 0 ? void 0 : _a.length) {\n        this.scrollElementsList.map(item => {\n          const min = item.nativeElement.getAttribute('data-min-scroll-value');\n          const max = item.nativeElement.getAttribute('data-max-scroll-value');\n          const position = window.pageYOffset;\n\n          if (position >= min && position <= max) {\n            this._renderer.addClass(item.nativeElement.parentElement, 'active');\n          } else {\n            this._renderer.removeClass(item.nativeElement.parentElement, 'active');\n          }\n        });\n      }\n    }\n\n    setScrollAttributes() {\n      var _a, _b;\n\n      const header = ((_a = this.document.querySelector('header')) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n      (_b = this.scrollElementsList) === null || _b === void 0 ? void 0 : _b.map(item => {\n        const id = item.nativeElement.getAttribute('data-anchor');\n        const target = this.document.getElementById(id);\n\n        if (target) {\n          const targetPosY = target.offsetTop - header - 10;\n          const parentHeight = target.parentElement.getBoundingClientRect().height + 6 || 0;\n\n          this._renderer.setAttribute(item.nativeElement, 'data-max-scroll-value', (targetPosY + parentHeight).toString());\n\n          this._renderer.setAttribute(item.nativeElement, 'data-min-scroll-value', targetPosY.toString());\n        }\n\n        return item;\n      });\n    }\n\n    ngAfterViewInit() {\n      this.goToSectionWIthAnchor(this.router.parseUrl(this.router.url).fragment);\n    }\n\n    ngAfterViewChecked() {\n      this.setScrollAttributes();\n    }\n\n  }\n\n  AddNavComponent.ɵfac = function AddNavComponent_Factory(t) {\n    return new (t || AddNavComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  AddNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddNavComponent,\n    selectors: [[\"add-nav\"]],\n    viewQuery: function AddNavComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollElementsList = _t);\n      }\n    },\n    hostBindings: function AddNavComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function AddNavComponent_scroll_HostBindingHandler() {\n          return ctx.onScrollEvent();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      componentContent: \"componentContent\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"add-nav-container\", 3, \"click\", 4, \"ngIf\"], [1, \"add-nav-container\", 3, \"click\"], [3, \"routerLink\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \".\", 3, \"queryParams\", \"fragment\"], [\"scrollElement\", \"\"]],\n    template: function AddNavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddNavComponent_div_0_Template, 4, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx._componentContent);\n      }\n    },\n    directives: [i2.NgIf, i1.RouterLinkWithHref, i2.NgForOf],\n    encapsulation: 2\n  });\n  return AddNavComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}