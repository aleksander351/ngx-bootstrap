{"ast":null,"code":"import { combineLatest } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { BsLocaleService } from '../bs-locale.service';\nimport { BsDatepickerActions } from './bs-datepicker.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./bs-datepicker.actions\";\nimport * as i2 from \"../bs-locale.service\";\nexport let BsDatepickerEffects = /*#__PURE__*/(() => {\n  class BsDatepickerEffects {\n    constructor(_actions, _localeService) {\n      this._actions = _actions;\n      this._localeService = _localeService;\n      this._subs = [];\n    }\n\n    init(_bsDatepickerStore) {\n      this._store = _bsDatepickerStore;\n      return this;\n    }\n    /** setters */\n\n\n    setValue(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.select(value));\n    }\n\n    setRangeValue(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.selectRange(value));\n    }\n\n    setMinDate(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.minDate(value));\n      return this;\n    }\n\n    setMaxDate(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.maxDate(value));\n      return this;\n    }\n\n    setDaysDisabled(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.daysDisabled(value));\n      return this;\n    }\n\n    setDatesDisabled(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.datesDisabled(value));\n      return this;\n    }\n\n    setDatesEnabled(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.datesEnabled(value));\n      return this;\n    }\n\n    setDisabled(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.isDisabled(value));\n      return this;\n    }\n\n    setDateCustomClasses(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.setDateCustomClasses(value));\n      return this;\n    }\n\n    setDateTooltipTexts(value) {\n      var _a;\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.setDateTooltipTexts(value));\n      return this;\n    }\n    /* Set rendering options */\n\n\n    setOptions(_config) {\n      var _a;\n\n      const _options = Object.assign({\n        locale: this._localeService.currentLocale\n      }, _config);\n\n      (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.setOptions(_options));\n      return this;\n    }\n    /** view to mode bindings */\n\n\n    setBindings(container) {\n      if (!this._store) {\n        return this;\n      }\n\n      if (this._store) {\n        container.selectedTime = this._store.select(state => state.selectedTime).pipe(filter(times => !!times));\n        container.daysCalendar$ = this._store.select(state => state.flaggedMonths).pipe(filter(months => !!months)); // month calendar\n\n        container.monthsCalendar = this._store.select(state => state.flaggedMonthsCalendar).pipe(filter(months => !!months)); // year calendar\n\n        container.yearsCalendar = this._store.select(state => state.yearsCalendarFlagged).pipe(filter(years => !!years));\n        container.viewMode = this._store.select(state => {\n          var _a;\n\n          return (_a = state.view) === null || _a === void 0 ? void 0 : _a.mode;\n        });\n        container.options$ = combineLatest([this._store.select(state => state.showWeekNumbers), this._store.select(state => state.displayMonths)]).pipe(map(latest => ({\n          showWeekNumbers: latest[0],\n          displayMonths: latest[1]\n        })));\n      }\n\n      return this;\n    }\n    /** event handlers */\n\n\n    setEventHandlers(container) {\n      container.setViewMode = event => {\n        var _a;\n\n        (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.changeViewMode(event));\n      };\n\n      container.navigateTo = event => {\n        var _a;\n\n        (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.navigateStep(event.step));\n      };\n\n      container.dayHoverHandler = event => {\n        var _a;\n\n        const _cell = event.cell;\n\n        if (_cell.isOtherMonth || _cell.isDisabled) {\n          return;\n        }\n\n        (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.hoverDay(event));\n        _cell.isHovered = event.isHovered;\n      };\n\n      container.monthHoverHandler = event => {\n        event.cell.isHovered = event.isHovered;\n      };\n\n      container.yearHoverHandler = event => {\n        event.cell.isHovered = event.isHovered;\n      };\n\n      return this;\n    }\n\n    registerDatepickerSideEffects() {\n      if (!this._store) {\n        return this;\n      }\n\n      this._subs.push(this._store.select(state => state.view).subscribe(() => {\n        var _a;\n\n        (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.calculate());\n      })); // format calendar values on month model change\n\n\n      this._subs.push(this._store.select(state => state.monthsModel).pipe(filter(monthModel => !!monthModel)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.format());\n      })); // flag day values\n\n\n      this._subs.push(this._store.select(state => state.formattedMonths).pipe(filter(month => !!month)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // flag day values\n\n\n      this._subs.push(this._store.select(state => state.selectedDate).pipe(filter(selectedDate => !!selectedDate)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // flag for date range picker\n\n\n      this._subs.push(this._store.select(state => state.selectedRange).pipe(filter(selectedRange => !!selectedRange)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // monthsCalendar\n\n\n      this._subs.push(this._store.select(state => state.monthsCalendar).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // years calendar\n\n\n      this._subs.push(this._store.select(state => state.yearsCalendarModel).pipe(filter(state => !!state)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // on hover\n\n\n      this._subs.push(this._store.select(state => state.hoveredDate).pipe(filter(hoveredDate => !!hoveredDate)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // date custom classes\n\n\n      this._subs.push(this._store.select(state => state.dateCustomClasses).pipe(filter(dateCustomClasses => !!dateCustomClasses)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // date tooltip texts\n\n\n      this._subs.push(this._store.select(state => state.dateTooltipTexts).pipe(filter(dateTooltipTexts => !!dateTooltipTexts)).subscribe(() => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.flag());\n      })); // on locale change\n\n\n      this._subs.push(this._localeService.localeChange.subscribe(locale => {\n        var _a;\n\n        return (_a = this._store) === null || _a === void 0 ? void 0 : _a.dispatch(this._actions.setLocale(locale));\n      }));\n\n      return this;\n    }\n\n    destroy() {\n      for (const sub of this._subs) {\n        sub.unsubscribe();\n      }\n    }\n\n  }\n\n  BsDatepickerEffects.ɵfac = function BsDatepickerEffects_Factory(t) {\n    return new (t || BsDatepickerEffects)(i0.ɵɵinject(i1.BsDatepickerActions), i0.ɵɵinject(i2.BsLocaleService));\n  };\n\n  BsDatepickerEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BsDatepickerEffects,\n    factory: BsDatepickerEffects.ɵfac,\n    providedIn: 'platform'\n  });\n  return BsDatepickerEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}