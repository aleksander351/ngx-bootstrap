{"ast":null,"code":"import { ElementRef, Renderer2 } from '@angular/core';\nimport { CLASS_NAME, DISMISS_REASONS, ModalOptions, TRANSITION_DURATIONS } from './modal-options.class';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./modal-options.class\";\nimport * as i2 from \"ngx-bootstrap/focus-trap\";\nconst _c0 = [\"*\"];\nexport let ModalContainerComponent = /*#__PURE__*/(() => {\n  class ModalContainerComponent {\n    constructor(options, _element, _renderer) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this.isShown = false;\n      this.isAnimated = false;\n      this.isModalHiding = false;\n      this.clickStartedInContent = false;\n      this.config = Object.assign({}, options);\n    }\n\n    ngOnInit() {\n      if (this.isAnimated) {\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n      }\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n\n      setTimeout(() => {\n        this.isShown = true;\n\n        this._renderer.addClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n      }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n\n      if (document && document.body) {\n        if (this.bsModalService && this.bsModalService.getModalsCount() === 1) {\n          this.bsModalService.checkScrollbar();\n          this.bsModalService.setScrollbar();\n        }\n\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n\n        this._renderer.setStyle(document.body, 'overflow-y', 'hidden');\n      }\n\n      if (this._element.nativeElement) {\n        this._element.nativeElement.focus();\n      }\n    }\n\n    onClickStarted(event) {\n      this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n\n    onClickStop(event) {\n      var _a;\n\n      const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n\n      if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {\n        this.clickStartedInContent = false;\n        return;\n      }\n\n      (_a = this.bsModalService) === null || _a === void 0 ? void 0 : _a.setDismissReason(DISMISS_REASONS.BACKRDOP);\n      this.hide();\n    }\n\n    onPopState() {\n      var _a;\n\n      (_a = this.bsModalService) === null || _a === void 0 ? void 0 : _a.setDismissReason(DISMISS_REASONS.BACK);\n      this.hide();\n    }\n\n    onEsc(event) {\n      var _a, _b;\n\n      if (!this.isShown) {\n        return;\n      }\n\n      if (event.keyCode === 27 || event.key === 'Escape') {\n        event.preventDefault();\n      }\n\n      if (this.config.keyboard && this.level === ((_a = this.bsModalService) === null || _a === void 0 ? void 0 : _a.getModalsCount())) {\n        (_b = this.bsModalService) === null || _b === void 0 ? void 0 : _b.setDismissReason(DISMISS_REASONS.ESC);\n        this.hide();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.isShown) {\n        this._hide();\n      }\n    }\n\n    hide() {\n      if (this.isModalHiding || !this.isShown) {\n        return;\n      }\n\n      if (this.config.closeInterceptor) {\n        this.config.closeInterceptor().then(() => this._hide(), () => undefined);\n        return;\n      }\n\n      this._hide();\n    }\n\n    _hide() {\n      this.isModalHiding = true;\n\n      this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n\n      setTimeout(() => {\n        var _a, _b;\n\n        this.isShown = false;\n\n        if (document && document.body && ((_a = this.bsModalService) === null || _a === void 0 ? void 0 : _a.getModalsCount()) === 1) {\n          this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n\n          this._renderer.setStyle(document.body, 'overflow-y', '');\n        }\n\n        (_b = this.bsModalService) === null || _b === void 0 ? void 0 : _b.hide(this.config.id);\n        this.isModalHiding = false;\n      }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n    }\n\n  }\n\n  ModalContainerComponent.ɵfac = function ModalContainerComponent_Factory(t) {\n    return new (t || ModalContainerComponent)(i0.ɵɵdirectiveInject(i1.ModalOptions), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  ModalContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalContainerComponent,\n    selectors: [[\"modal-container\"]],\n    hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\", 1, \"modal\"],\n    hostVars: 3,\n    hostBindings: function ModalContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function ModalContainerComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onClickStarted($event);\n        })(\"click\", function ModalContainerComponent_click_HostBindingHandler($event) {\n          return ctx.onClickStop($event);\n        })(\"popstate\", function ModalContainerComponent_popstate_HostBindingHandler() {\n          return ctx.onPopState();\n        }, false, i0.ɵɵresolveWindow)(\"keydown.esc\", function ModalContainerComponent_keydown_esc_HostBindingHandler($event) {\n          return ctx.onEsc($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.config.ariaLabelledBy)(\"aria-describedby\", ctx.config.ariaDescribedby);\n      }\n    },\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 2,\n    consts: [[\"role\", \"document\", \"focusTrap\", \"\"], [1, \"modal-content\"]],\n    template: function ModalContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"modal-dialog\" + (ctx.config.class ? \" \" + ctx.config.class : \"\"));\n      }\n    },\n    directives: [i2.FocusTrapDirective],\n    encapsulation: 2\n  });\n  return ModalContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}