{"ast":null,"code":"import { Observable, of } from 'rxjs';\nimport { mergeMap, delay } from 'rxjs/operators';\nimport { TypeaheadConfig } from 'ngx-bootstrap/typeahead';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../../../src/typeahead/typeahead.directive\";\nimport * as i3 from \"@angular/common\";\n\nfunction DemoTypeaheadCancelRequestOnFocusLostComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport function getTypeaheadConfig() {\n  return Object.assign(new TypeaheadConfig(), {\n    cancelRequestOnFocusLost: true\n  });\n}\nexport let DemoTypeaheadCancelRequestOnFocusLostComponent = /*#__PURE__*/(() => {\n  class DemoTypeaheadCancelRequestOnFocusLostComponent {\n    constructor() {\n      this.statesComplex = [{\n        id: 1,\n        name: 'Alabama',\n        region: 'South'\n      }, {\n        id: 2,\n        name: 'Alaska',\n        region: 'West'\n      }, {\n        id: 3,\n        name: 'Arizona',\n        region: 'West'\n      }, {\n        id: 4,\n        name: 'Arkansas',\n        region: 'South'\n      }, {\n        id: 5,\n        name: 'California',\n        region: 'West'\n      }, {\n        id: 6,\n        name: 'Colorado',\n        region: 'West'\n      }, {\n        id: 7,\n        name: 'Connecticut',\n        region: 'Northeast'\n      }, {\n        id: 8,\n        name: 'Delaware',\n        region: 'South'\n      }, {\n        id: 9,\n        name: 'Florida',\n        region: 'South'\n      }, {\n        id: 10,\n        name: 'Georgia',\n        region: 'South'\n      }, {\n        id: 11,\n        name: 'Hawaii',\n        region: 'West'\n      }, {\n        id: 12,\n        name: 'Idaho',\n        region: 'West'\n      }, {\n        id: 13,\n        name: 'Illinois',\n        region: 'Midwest'\n      }, {\n        id: 14,\n        name: 'Indiana',\n        region: 'Midwest'\n      }, {\n        id: 15,\n        name: 'Iowa',\n        region: 'Midwest'\n      }, {\n        id: 16,\n        name: 'Kansas',\n        region: 'Midwest'\n      }, {\n        id: 17,\n        name: 'Kentucky',\n        region: 'South'\n      }, {\n        id: 18,\n        name: 'Louisiana',\n        region: 'South'\n      }, {\n        id: 19,\n        name: 'Maine',\n        region: 'Northeast'\n      }, {\n        id: 21,\n        name: 'Maryland',\n        region: 'South'\n      }, {\n        id: 22,\n        name: 'Massachusetts',\n        region: 'Northeast'\n      }, {\n        id: 23,\n        name: 'Michigan',\n        region: 'Midwest'\n      }, {\n        id: 24,\n        name: 'Minnesota',\n        region: 'Midwest'\n      }, {\n        id: 25,\n        name: 'Mississippi',\n        region: 'South'\n      }, {\n        id: 26,\n        name: 'Missouri',\n        region: 'Midwest'\n      }, {\n        id: 27,\n        name: 'Montana',\n        region: 'West'\n      }, {\n        id: 28,\n        name: 'Nebraska',\n        region: 'Midwest'\n      }, {\n        id: 29,\n        name: 'Nevada',\n        region: 'West'\n      }, {\n        id: 30,\n        name: 'New Hampshire',\n        region: 'Northeast'\n      }, {\n        id: 31,\n        name: 'New Jersey',\n        region: 'Northeast'\n      }, {\n        id: 32,\n        name: 'New Mexico',\n        region: 'West'\n      }, {\n        id: 33,\n        name: 'New York',\n        region: 'Northeast'\n      }, {\n        id: 34,\n        name: 'North Dakota',\n        region: 'Midwest'\n      }, {\n        id: 35,\n        name: 'North Carolina',\n        region: 'South'\n      }, {\n        id: 36,\n        name: 'Ohio',\n        region: 'Midwest'\n      }, {\n        id: 37,\n        name: 'Oklahoma',\n        region: 'South'\n      }, {\n        id: 38,\n        name: 'Oregon',\n        region: 'West'\n      }, {\n        id: 39,\n        name: 'Pennsylvania',\n        region: 'Northeast'\n      }, {\n        id: 40,\n        name: 'Rhode Island',\n        region: 'Northeast'\n      }, {\n        id: 41,\n        name: 'South Carolina',\n        region: 'South'\n      }, {\n        id: 42,\n        name: 'South Dakota',\n        region: 'Midwest'\n      }, {\n        id: 43,\n        name: 'Tennessee',\n        region: 'South'\n      }, {\n        id: 44,\n        name: 'Texas',\n        region: 'South'\n      }, {\n        id: 45,\n        name: 'Utah',\n        region: 'West'\n      }, {\n        id: 46,\n        name: 'Vermont',\n        region: 'Northeast'\n      }, {\n        id: 47,\n        name: 'Virginia',\n        region: 'South'\n      }, {\n        id: 48,\n        name: 'Washington',\n        region: 'South'\n      }, {\n        id: 49,\n        name: 'West Virginia',\n        region: 'South'\n      }, {\n        id: 50,\n        name: 'Wisconsin',\n        region: 'Midwest'\n      }, {\n        id: 51,\n        name: 'Wyoming',\n        region: 'West'\n      }];\n      this.dataSource = Observable.create(observer => {\n        // Runs on every search\n        observer.next(this.asyncSelected);\n      }).pipe(mergeMap(token => this.getStatesAsObservable(token)), delay(1000));\n    }\n\n    getStatesAsObservable(token) {\n      const query = new RegExp(token, 'i');\n      return of(this.statesComplex.filter(state => {\n        return query.test(state.name);\n      }));\n    }\n\n    changeTypeaheadLoading(e) {\n      this.typeaheadLoading = e;\n    }\n\n    typeaheadOnSelect(e) {\n      console.log('Selected value: ', e.value);\n    }\n\n  }\n\n  DemoTypeaheadCancelRequestOnFocusLostComponent.ɵfac = function DemoTypeaheadCancelRequestOnFocusLostComponent_Factory(t) {\n    return new (t || DemoTypeaheadCancelRequestOnFocusLostComponent)();\n  };\n\n  DemoTypeaheadCancelRequestOnFocusLostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoTypeaheadCancelRequestOnFocusLostComponent,\n    selectors: [[\"demo-typeahead-cancel-on-focus-lost\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TypeaheadConfig,\n      useFactory: getTypeaheadConfig\n    }])],\n    decls: 5,\n    vars: 7,\n    consts: [[1, \"card\", \"card-block\", \"card-header\"], [\"typeaheadOptionField\", \"name\", \"placeholder\", \"Locations loaded with timeout\", 1, \"form-control\", 3, \"ngModel\", \"typeahead\", \"typeaheadOptionsLimit\", \"ngModelChange\", \"typeaheadLoading\", \"typeaheadOnSelect\"], [4, \"ngIf\"]],\n    template: function DemoTypeaheadCancelRequestOnFocusLostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"pre\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DemoTypeaheadCancelRequestOnFocusLostComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.asyncSelected = $event;\n        })(\"typeaheadLoading\", function DemoTypeaheadCancelRequestOnFocusLostComponent_Template_input_typeaheadLoading_3_listener($event) {\n          return ctx.changeTypeaheadLoading($event);\n        })(\"typeaheadOnSelect\", function DemoTypeaheadCancelRequestOnFocusLostComponent_Template_input_typeaheadOnSelect_3_listener($event) {\n          return ctx.typeaheadOnSelect($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DemoTypeaheadCancelRequestOnFocusLostComponent_div_4_Template, 2, 0, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Model: \", i0.ɵɵpipeBind1(2, 5, ctx.asyncSelected), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.asyncSelected)(\"typeahead\", ctx.dataSource)(\"typeaheadOptionsLimit\", 7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.typeaheadLoading);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.TypeaheadDirective, i3.NgIf],\n    pipes: [i3.JsonPipe],\n    encapsulation: 2\n  });\n  return DemoTypeaheadCancelRequestOnFocusLostComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}