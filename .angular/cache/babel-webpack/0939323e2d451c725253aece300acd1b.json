{"ast":null,"code":"import { ApiSectionsComponent } from '@ngx-bootstrap-doc/docs';\nimport { DemoDatepickerBasicComponent } from './demos/basic/basic';\nimport { DemoDatepickerByIsOpenPropComponent } from './demos/trigger-by-isopen-property/trigger-by-isopen-property';\nimport { DemoDatepickerChangeLocaleComponent } from './demos/change-locale/change-locale';\nimport { DemoDatepickerColorThemingComponent } from './demos/color-theming/color-theming';\nimport { DemoDatepickerConfigMethodComponent } from './demos/config-method/config-method';\nimport { DemoDatePickerConfigObjectComponent } from './demos/config-object/config-object';\nimport { DemoDatePickerCustomFormatComponent } from './demos/custom-format/custom-format';\nimport { DemoDatepickerDateInitialStateComponent } from './demos/date-initial-state/date-initial-state';\nimport { DemoDatepickerDatesDisabledComponent } from './demos/disable-dates/disable-dates';\nimport { DemoDatepickerDatesEnabledComponent } from './demos/enable-dates/enable-dates';\nimport { DemoDatepickerDaysDisabledComponent } from './demos/disable-days/disable-days';\nimport { DemoDatepickerDisabledComponent } from './demos/disabled/disabled.component';\nimport { DemoDatepickerFormsComponent } from './demos/forms/forms.component';\nimport { DemoDatepickerHideOnScrollComponent } from './demos/hide-on-scroll/hide-on-scroll';\nimport { DemoDatepickerInlineComponent } from './demos/inline-datepicker/inline-datepicker.component';\nimport { DemoDatepickerMinMaxComponent } from './demos/min-max/min-max.component';\nimport { DemoDatepickerMinModeComponent } from './demos/min-mode/min-mode.component';\nimport { DemoDatepickerOutsideClickComponent } from './demos/outside-click/outside-click';\nimport { DemoDatepickerPlacementComponent } from './demos/placement/placement';\nimport { DemoDatepickerReactiveFormsComponent } from './demos/reactive-forms/reactive-forms.component';\nimport { DemoDatePickerReturnFocusToInputComponent } from './demos/return-focus-to-input/return-focus-to-input.component';\nimport { DemoDatepickerDateCustomClassesComponent } from './demos/date-custom-classes/date-custom-classes';\nimport { DemoDatePickerSelectDatesFromOtherMonthsComponent } from './demos/select-dates-from-other-months/select-dates-from-other-months';\nimport { DemoDatePickerAdaptivePositionComponent } from './demos/adaptive-position/adaptive-position';\nimport { DemoDatePickerAnimatedComponent } from './demos/animated/animated';\nimport { DemoDatepickerCustomTodayClassComponent } from './demos/custom-today-class/custom-today-class.component';\nimport { DemoDatePickerSelectWeekComponent } from './demos/select-week/select-week';\nimport { DemoDatepickerTriggersCustomComponent } from './demos/triggers-custom/triggers-custom';\nimport { DemoDatepickerTriggersManualComponent } from './demos/triggers-manual/triggers-manual';\nimport { DemoDatepickerValueChangeEventComponent } from './demos/value-change-event/value-change-event';\nimport { DemoDatePickerVisibilityEventsComponent } from './demos/visibility-events/visibility-events';\nimport { ExamplesComponent } from '@ngx-bootstrap-doc/docs';\nimport { NgApiDocComponent, NgApiDocConfigComponent } from '@ngx-bootstrap-doc/docs';\nimport { DemoDatePickerQuickSelectRangesComponent } from './demos/quick-select-ranges/quick-select-ranges';\nimport { DemoDateRangePickerShowPreviousMonth } from './demos/daterangepicker-show-previous-month/show-previous-month';\nimport { DemoDatePickerSelectWeekRangeComponent } from './demos/select-week-range/select-week-range';\nimport { DemoDatePickerTooltipToSelectedDates } from './demos/tooltip-to-selected-dates/tooltip-to-selected-dates';\nimport { DemoDateRangePickerMaxDateRangeComponent } from './demos/max-date-range/max-date-range';\nimport { DemoDateRangePickerDisplayOneMonth } from './demos/daterangepicker-display-one-month/display-one-month';\nimport { DemoDatepickerTodayButtonComponent } from './demos/today-button/today-button';\nimport { DemoDatepickerClearButtonComponent } from './demos/clear-button/clear-button';\nimport { DemoDatepickerStartViewComponent } from \"./demos/start-view/start-view\";\nimport { DemoDatepickerPreventChangeToNextMonthComponent } from './demos/prevent-change-to-next-month/prevent-change-to-next-month.component';\nimport { DemoDatepickerWithTimepickerComponent } from './demos/with-timepicker/with-timepicker';\nexport const demoComponentContent = [{\n  name: 'Overview',\n  anchor: 'overview',\n  tabName: 'overview',\n  outlet: ExamplesComponent,\n  content: [{\n    title: 'Basic',\n    anchor: 'basic',\n    component: require('!!raw-loader!./demos/basic/basic.ts'),\n    html: require('!!raw-loader!./demos/basic/basic.html'),\n    description: `\n          <p>Note: If you installed ngx-bootstrap not via ng add command, you will need to perform a several actions</p>\n          <p>Notable change is additional css for it <code> \"/datepicker/bs-datepicker.css\"</code> <br></p>\n          <p>There are two ways of adding css:</p>\n          <ul>\n            <li>Load it from CDN. Add <code>&lt;link rel=\"stylesheet\"\n              href=\"https://unpkg.com/ngx-bootstrap/datepicker/bs-datepicker.css\"&gt;</code> to your\n              <code>index.html</code></li>\n            <li>Load it from <code>node_modules/ngx-bootstrap/datepicker/bs-datepicker.css</code> via package bundler\n              like Angular CLI, if you're using one.\n            </li>\n          </ul>\n        `,\n    outlet: DemoDatepickerBasicComponent\n  }, {\n    title: 'Inline',\n    anchor: 'inline-datepicker',\n    component: require('!!raw-loader!./demos/inline-datepicker/inline-datepicker.component.ts'),\n    html: require('!!raw-loader!./demos/inline-datepicker/inline-datepicker.component.html'),\n    description: `<p>with initial state set by <code>bsInlineValue</code> property</p>`,\n    outlet: DemoDatepickerInlineComponent\n  }, {\n    title: 'With animation',\n    anchor: 'animated',\n    component: require('!!raw-loader!./demos/animated/animated'),\n    html: require('!!raw-loader!./demos/animated/animated.html'),\n    description: `You can enable animation via <code>isAnimated</code> config option`,\n    outlet: DemoDatePickerAnimatedComponent\n  }, {\n    title: 'Adaptive position',\n    anchor: 'adaptive-position',\n    component: require('!!raw-loader!./demos/adaptive-position/adaptive-position.ts'),\n    html: require('!!raw-loader!./demos/adaptive-position/adaptive-position.html'),\n    description: `<p>You can enable adaptive position via <code>adaptivePosition</code> option in <code>bsConfig</code></p>`,\n    outlet: DemoDatePickerAdaptivePositionComponent\n  }, {\n    title: 'Initial state',\n    anchor: 'date-initial-state',\n    component: require('!!raw-loader!./demos/date-initial-state/date-initial-state.ts'),\n    html: require('!!raw-loader!./demos/date-initial-state/date-initial-state.html'),\n    outlet: DemoDatepickerDateInitialStateComponent\n  }, {\n    title: 'Custom date format',\n    anchor: 'format',\n    component: require('!!raw-loader!./demos/custom-format/custom-format.ts'),\n    html: require('!!raw-loader!./demos/custom-format/custom-format.html'),\n    description: `\n          <p>You can easily change the date format by specifying the <code>dateInputFormat</code>\n            in <code>[bsConfig]</code>\n          </p>\n          <p>To set your own date format you can use variety of formats provided by\n          <a href=\"https://momentjs.com/docs/#/displaying/format/\" target=\"_blank\">moment.js</a></p>\n          <p>The following examples show how to use several date formats inside a form:\n            <ul>\n              <li><code>YYYY-MM-DD</code></li>\n              <li><code>MM/DD/YYYY</code></li>\n              <li><code>MMMM Do YYYY,h:mm:ss a</code></li>\n            </ul>\n          </p>\n        `,\n    outlet: DemoDatePickerCustomFormatComponent\n  }, {\n    title: 'Hide on scroll',\n    anchor: 'hide-on-scroll',\n    component: require('!!raw-loader!./demos/hide-on-scroll/hide-on-scroll.ts'),\n    html: require('!!raw-loader!./demos/hide-on-scroll/hide-on-scroll.html'),\n    description: `\n          <p>Hide the datepicker on page scroll.</p>\n        `,\n    outlet: DemoDatepickerHideOnScrollComponent\n  }, {\n    title: 'Themes',\n    anchor: 'themes',\n    component: require('!!raw-loader!./demos/color-theming/color-theming.ts'),\n    html: require('!!raw-loader!./demos/color-theming/color-theming.html'),\n    description: `\n        <p>Datepicker comes with some default color schemes.\n        You can change it by manipulating <code>containerClass</code> property in <code>bsConfig</code> object</p>\n        <p>There are 6 color schemes: <code>theme-default</code>, <code>theme-green</code>, <code>theme-blue</code>,\n        <code>theme-dark-blue</code>, <code>theme-red</code>, <code>theme-orange</code></p>\n      `,\n    outlet: DemoDatepickerColorThemingComponent\n  }, {\n    title: 'Locales',\n    anchor: 'locales',\n    component: require('!!raw-loader!./demos/change-locale/change-locale.ts'),\n    html: require('!!raw-loader!./demos/change-locale/change-locale.html'),\n    description: `\n          <p>Datepicker can use different locales. <br>It's possible to change a locale by calling\n          <code>use</code>\n          method of <code>BsLocaleService</code>, list of available locales is in dropdown below.</p>\n          <p>To use a different locale, you have to import it from <code>ngx-bootstrap/chronos</code> first, then\n          define it in your <code>@NgModule</code> using function <code>defineLocale</code></p>\n          <p>Example: </p>\n          <code>import { defineLocale } from 'ngx-bootstrap/chronos';</code><br>\n          <code>import { deLocale } from 'ngx-bootstrap/locale';</code><br>\n          <code>defineLocale('de', deLocale);</code>\n          <br>\n          <br>\n        `,\n    outlet: DemoDatepickerChangeLocaleComponent\n  }, {\n    title: 'Min-max',\n    anchor: 'min-max',\n    component: require('!!raw-loader!./demos/min-max/min-max.component.ts'),\n    html: require('!!raw-loader!./demos/min-max/min-max.component.html'),\n    description: `\n          <p>You can set min and max date of datepicker/daterangepicker using <code>minDate</code> and\n          <code>maxDate</code> properties</p>\n          <p>In the following example <code>minDate</code> is set to yesterday and <code>maxDate</code>\n          to the current day in the next week</p>`,\n    outlet: DemoDatepickerMinMaxComponent\n  }, {\n    title: 'Days disabled',\n    anchor: 'days-disabled',\n    component: require('!!raw-loader!./demos/disable-days/disable-days.ts'),\n    html: require('!!raw-loader!./demos/disable-days/disable-days.html'),\n    description: `\n          <p>You can set which days of the week should be disabled with <code>daysDisabled</code>\n          <p>In the following example <code>daysDisabled</code> is set with an array which disabled Saturday and Sunday.\n          Sunday is considered the first day of the week and thus has the value 0</p>`,\n    outlet: DemoDatepickerDaysDisabledComponent\n  }, {\n    title: 'Dates disabled',\n    anchor: 'dates-disabled',\n    component: require('!!raw-loader!./demos/disable-dates/disable-dates.ts'),\n    html: require('!!raw-loader!./demos/disable-dates/disable-dates.html'),\n    description: `\n          <p>You can set which dates should be disabled with <code>datesDisabled</code></p>\n          <p>In the following example <code>datesDisabled</code> is set with an array to disable 2020-02-05 and 2020-02-09.</p>\n          <p>NOTE: DO NOT USE this functionality with <code>datesEnabled</code> at the same time</p>`,\n    outlet: DemoDatepickerDatesDisabledComponent\n  }, {\n    title: 'Dates enabled',\n    anchor: 'dates-enabled',\n    component: require('!!raw-loader!./demos/enable-dates/enable-dates.ts'),\n    html: require('!!raw-loader!./demos/enable-dates/enable-dates.html'),\n    description: `\n          <p>You can set which dates should be enable with <code>datesEnabled</code></p>\n          <p>In the following example <code>datesEnabled</code> is set with an array to enable 2020-02-06, 2020-02-08 and 2020-02-11. All other dates are disabled</p>\n          <p>NOTE: DO NOT USE this functionality with <code>datesDisabled</code> at the same time</p>`,\n    outlet: DemoDatepickerDatesEnabledComponent\n  }, {\n    title: 'Display one month',\n    anchor: 'display-one-month',\n    component: require('!!raw-loader!./demos/daterangepicker-display-one-month/display-one-month.ts'),\n    html: require('!!raw-loader!./demos/daterangepicker-display-one-month/display-one-month.html'),\n    description: `<p>You can configure, how many months  you want to show for daterangepicker via <code>displayMonths</code> in <code>BsDaterangepickerConfig.</code></p>\n        <p>With <code>displayOneMonthRange</code> you can show only one month for two cases</p>`,\n    outlet: DemoDateRangePickerDisplayOneMonth\n  }, {\n    title: 'Min-mode',\n    anchor: 'min-mode',\n    component: require('!!raw-loader!./demos/min-mode/min-mode.component.ts'),\n    html: require('!!raw-loader!./demos/min-mode/min-mode.component.html'),\n    description: `\n          <p>You can set min view mode of datepicker using <code>minMode</code> property</p>\n          <p>In the following example <code>minMode</code> is set to 'month'</p>`,\n    outlet: DemoDatepickerMinModeComponent\n  }, {\n    title: 'Disabled',\n    anchor: 'disabled-datepicker',\n    component: require('!!raw-loader!./demos/disabled/disabled.component.ts'),\n    html: require('!!raw-loader!./demos/disabled/disabled.component.html'),\n    description: `<p>If you want to disable datepicker's or daterangepicker's content set <code>isDisabled</code> property to true</p>`,\n    outlet: DemoDatepickerDisabledComponent\n  }, {\n    title: 'Custom today class',\n    anchor: 'today-class',\n    component: require('!!raw-loader!./demos/custom-today-class/custom-today-class.component.ts'),\n    html: require('!!raw-loader!./demos/custom-today-class/custom-today-class.component.html'),\n    description: `<p>If you want to add custom class to current day datepicker's content set value to <code>customTodayClass</code> option in <code>bsConfig</code></p>`,\n    outlet: DemoDatepickerCustomTodayClassComponent\n  }, {\n    title: 'Forms',\n    anchor: 'forms',\n    component: require('!!raw-loader!./demos/forms/forms.component.ts'),\n    html: require('!!raw-loader!./demos/forms/forms.component.html'),\n    description: `<p>Datepicker and daterangepicker can be used in forms. Keep in mind that\n          value of <code>ngModel</code> is <code>Date</code> object for datepicker and array of 2\n          <code>Date</code> objects for daterangepicker</p>`,\n    outlet: DemoDatepickerFormsComponent\n  }, {\n    title: 'Reactive forms',\n    anchor: 'reactive-forms',\n    component: require('!!raw-loader!./demos/reactive-forms/reactive-forms.component.ts'),\n    html: require('!!raw-loader!./demos/reactive-forms/reactive-forms.component.html'),\n    outlet: DemoDatepickerReactiveFormsComponent\n  }, {\n    title: 'Return focus to input',\n    anchor: 'return-focus-to-input',\n    component: require('!!raw-loader!./demos/return-focus-to-input/return-focus-to-input.component.ts'),\n    html: require('!!raw-loader!./demos/return-focus-to-input/return-focus-to-input.component.html'),\n    description: `<p>Allows to return focus to input of datepicker or daterangepicker after the date or daterange selection</p>`,\n    outlet: DemoDatePickerReturnFocusToInputComponent\n  }, {\n    title: 'Manual triggering',\n    anchor: 'triggers-manual',\n    component: require('!!raw-loader!./demos/triggers-manual/triggers-manual.ts'),\n    html: require('!!raw-loader!./demos/triggers-manual/triggers-manual.html'),\n    description: `<p>You can manage datepicker's state by using its <code>show()</code>, <code>hide()</code>\n          and <code>toggle()</code> methods</p>`,\n    outlet: DemoDatepickerTriggersManualComponent\n  }, {\n    title: 'Placement',\n    anchor: 'placement',\n    component: require('!!raw-loader!./demos/placement/placement.ts'),\n    html: require('!!raw-loader!./demos/placement/placement.html'),\n    description: `<p>Add <code>placement</code> property if you want to change placement</p>`,\n    outlet: DemoDatepickerPlacementComponent\n  }, {\n    title: 'Config method',\n    anchor: 'config-method',\n    component: require('!!raw-loader!./demos/config-method/config-method.ts'),\n    html: require('!!raw-loader!./demos/config-method/config-method.html'),\n    description: `<p>You can manage datepicker's options by using its <code>setConfig()</code> method</p>`,\n    outlet: DemoDatepickerConfigMethodComponent\n  }, {\n    title: 'Visibility Events',\n    anchor: 'visibility-events',\n    component: require('!!raw-loader!./demos/visibility-events/visibility-events.ts'),\n    html: require('!!raw-loader!./demos/visibility-events/visibility-events.html'),\n    description: `<p>You can subscribe to datepicker's visibility events</p>`,\n    outlet: DemoDatePickerVisibilityEventsComponent\n  }, {\n    title: 'Value change event',\n    anchor: 'value-change-event',\n    component: require('!!raw-loader!./demos/value-change-event/value-change-event.ts'),\n    html: require('!!raw-loader!./demos/value-change-event/value-change-event.html'),\n    description: `<p>You can subscribe to datepicker's value change event (<code>bsValueChange</code>).</p>`,\n    outlet: DemoDatepickerValueChangeEventComponent\n  }, {\n    title: 'Config properties',\n    anchor: 'config-object',\n    component: require('!!raw-loader!./demos/config-object/config-object.ts'),\n    html: require('!!raw-loader!./demos/config-object/config-object.html'),\n    description: `<p>You can configure the datepicker via its <code>bsConfig</code> option</p>`,\n    outlet: DemoDatePickerConfigObjectComponent\n  }, {\n    title: 'Select dates from other month',\n    anchor: 'select-dates-from-other-month',\n    component: require('!!raw-loader!./demos/select-dates-from-other-months/select-dates-from-other-months.ts'),\n    html: require('!!raw-loader!./demos/select-dates-from-other-months/select-dates-from-other-months.html'),\n    description: `<p>You can enable dates from other months via <code>selectFromOtherMonth</code> option in <code>bsConfig</code></p>`,\n    outlet: DemoDatePickerSelectDatesFromOtherMonthsComponent\n  }, {\n    title: 'Select week',\n    anchor: 'select-week',\n    component: require('!!raw-loader!./demos/select-week/select-week.ts'),\n    html: require('!!raw-loader!./demos/select-week/select-week.html'),\n    description: `<p>You can enable ability to select a week number (first day of the week will be selected) via <code>selectWeek</code> option in <code>bsConfig</code></p>`,\n    outlet: DemoDatePickerSelectWeekComponent\n  }, {\n    title: 'Select week range',\n    anchor: 'select-week-range',\n    component: require('!!raw-loader!./demos/select-week-range/select-week-range.ts'),\n    html: require('!!raw-loader!./demos/select-week-range/select-week-range.html'),\n    description: `<p>You can enable ability to select a week number (range with first weekday - last weekday will be selected) via <code>selectWeekRange</code> option in <code>bsConfig</code></p>`,\n    outlet: DemoDatePickerSelectWeekRangeComponent\n  }, {\n    title: 'Outside click',\n    anchor: 'outside-click',\n    component: require('!!raw-loader!./demos/outside-click/outside-click.ts'),\n    html: require('!!raw-loader!./demos/outside-click/outside-click.html'),\n    description: `<p>Datepicker closes after outside click by default. To change\n          this behavior, use <code>outsideClick</code> property.</p>`,\n    outlet: DemoDatepickerOutsideClickComponent\n  }, {\n    title: 'Trigger by isOpen property',\n    anchor: 'trigger-by-isopen-property',\n    component: require('!!raw-loader!./demos/trigger-by-isopen-property/trigger-by-isopen-property.ts'),\n    html: require('!!raw-loader!./demos/trigger-by-isopen-property/trigger-by-isopen-property.html'),\n    description: `<p>Datepicker can be shown or hidden by changing <code>isOpen</code> property</p>`,\n    outlet: DemoDatepickerByIsOpenPropComponent\n  }, {\n    title: 'Custom triggers',\n    anchor: 'triggers-custom',\n    component: require('!!raw-loader!./demos/triggers-custom/triggers-custom.ts'),\n    html: require('!!raw-loader!./demos/triggers-custom/triggers-custom.html'),\n    description: `<p>Use different triggers ( for example <code>keydown</code>, <code>mouseenter</code> and\n          <code>dblclick</code> ) to interact with datepicker</p>`,\n    outlet: DemoDatepickerTriggersCustomComponent\n  }, {\n    title: 'Date custom classes',\n    anchor: 'date-custom-classes',\n    component: require('!!raw-loader!./demos/date-custom-classes/date-custom-classes.ts'),\n    html: require('!!raw-loader!./demos/date-custom-classes/date-custom-classes.html'),\n    style: require('!!raw-loader!./demos/date-custom-classes/date-custom-classes.scss'),\n    description: `<p>Style dates with custom classes</p>`,\n    outlet: DemoDatepickerDateCustomClassesComponent\n  }, {\n    title: 'Tooltip for selected dates',\n    anchor: 'tooltip-for-selected-dates',\n    component: require('!!raw-loader!./demos/tooltip-to-selected-dates/tooltip-to-selected-dates.ts'),\n    html: require('!!raw-loader!./demos/tooltip-to-selected-dates/tooltip-to-selected-dates.html'),\n    description: ``,\n    outlet: DemoDatePickerTooltipToSelectedDates\n  }, {\n    title: 'Quick select ranges',\n    anchor: 'quick-select-ranges',\n    component: require('!!raw-loader!./demos/quick-select-ranges/quick-select-ranges.ts'),\n    html: require('!!raw-loader!./demos/quick-select-ranges/quick-select-ranges.html'),\n    description: `<p>Quick select ranges can be added to Daterangepicker using <code>ranges</code></p>`,\n    outlet: DemoDatePickerQuickSelectRangesComponent\n  }, {\n    title: 'Prevent change to next month',\n    anchor: 'prevent-change-to-next-month',\n    component: require('!!raw-loader!./demos/prevent-change-to-next-month/prevent-change-to-next-month.component.ts'),\n    html: require('!!raw-loader!./demos/prevent-change-to-next-month/prevent-change-to-next-month.component.html'),\n    description: `<p>Pick some date from second month and it wont change to the next month</p>`,\n    outlet: DemoDatepickerPreventChangeToNextMonthComponent\n  }, {\n    title: 'Previous month in Daterangepicker',\n    anchor: 'daterangepicker-previous-month',\n    component: require('!!raw-loader!./demos/daterangepicker-show-previous-month/show-previous-month.ts'),\n    html: require('!!raw-loader!./demos/daterangepicker-show-previous-month/show-previous-month.html'),\n    description: `<p>Pick previous & current month instead of current & next month.When daterange selected and related to current month,\n        daterangepicker will works by default, with current & next month</p>`,\n    outlet: DemoDateRangePickerShowPreviousMonth\n  }, {\n    title: 'Show Today Button',\n    anchor: 'datepicker-show-today-button',\n    component: require('!!raw-loader!./demos/today-button/today-button.ts'),\n    html: require('!!raw-loader!./demos/today-button/today-button.html'),\n    description: `<p>Display an optional 'Today' button that will automatically select today's date.</p>`,\n    outlet: DemoDatepickerTodayButtonComponent\n  }, {\n    title: 'Show Clear Button',\n    anchor: 'datepicker-show-clear-button',\n    component: require('!!raw-loader!./demos/clear-button/clear-button.ts'),\n    html: require('!!raw-loader!./demos/clear-button/clear-button.html'),\n    description: `<p>Display an optional 'Clear' button that will automatically clear date.</p>`,\n    outlet: DemoDatepickerClearButtonComponent\n  }, {\n    title: 'Start view',\n    anchor: 'start-view',\n    component: require('!!raw-loader!./demos/start-view/start-view.ts'),\n    html: require('!!raw-loader!./demos/start-view/start-view.html'),\n    description: `<p>Add <code>startView</code> property if you want to change start view</p>`,\n    outlet: DemoDatepickerStartViewComponent\n  }, {\n    title: 'Max Date Range in Daterangepicker',\n    anchor: 'daterangepicker-max-date-range',\n    component: require('!!raw-loader!./demos/max-date-range/max-date-range.ts'),\n    html: require('!!raw-loader!./demos/max-date-range/max-date-range.html'),\n    description: `<p>Max date range after first date selection can be added to Daterangepicker using <code>maxDateRange</code>.</p>\n        <p>If you also use <code>maxDate</code> property, you can't select second date, which exceeds value of <code>maxDate</code>.</p>`,\n    outlet: DemoDateRangePickerMaxDateRangeComponent\n  }, {\n    title: 'With timepicker',\n    anchor: 'with-timepicker',\n    component: require('!!raw-loader!./demos/with-timepicker/with-timepicker'),\n    html: require('!!raw-loader!./demos/with-timepicker/with-timepicker.html'),\n    description: `You can enable timepicker via <code>withTimepicker</code> config option`,\n    outlet: DemoDatepickerWithTimepickerComponent\n  }]\n}, {\n  name: 'Installation',\n  anchor: 'api-reference',\n  tabName: 'api',\n  usage: require('!!raw-loader!./docs/usage.md'),\n  importInfo: '<span class=\"pln\">ng add ngx</span><span class=\"pun\">-</span><span class=\"pln\">bootstrap </span> --component <span class=\"pln\">datepicker</span>',\n  outlet: ApiSectionsComponent,\n  content: [{\n    title: 'BsDatepickerDirective',\n    anchor: 'bs-datepicker-component',\n    outlet: NgApiDocComponent\n  }, {\n    title: 'BsDaterangepickerDirective',\n    anchor: 'bs-daterangepicker',\n    outlet: NgApiDocComponent\n  }, {\n    title: 'BsDatepickerInlineDirective',\n    anchor: 'bs-datepicker-inline',\n    outlet: NgApiDocComponent\n  }, {\n    title: 'BsDatepickerConfig',\n    anchor: 'bs-datepicker-config',\n    outlet: NgApiDocConfigComponent\n  }]\n}, {\n  name: 'Examples',\n  anchor: 'examples',\n  tabName: 'examples',\n  outlet: ExamplesComponent,\n  content: [{\n    title: 'Basic',\n    anchor: 'basic-ex',\n    outlet: DemoDatepickerBasicComponent\n  }, {\n    title: 'Inline',\n    anchor: 'inline-datepicker-ex',\n    outlet: DemoDatepickerInlineComponent\n  }, {\n    title: 'With animation',\n    anchor: 'animated-ex',\n    outlet: DemoDatePickerAnimatedComponent\n  }, {\n    title: 'Adaptive position',\n    anchor: 'adaptive-position-ex',\n    outlet: DemoDatePickerAdaptivePositionComponent\n  }, {\n    title: 'Initial state',\n    anchor: 'date-initial-state-ex',\n    outlet: DemoDatepickerDateInitialStateComponent\n  }, {\n    title: 'Custom date format',\n    anchor: 'format-ex',\n    outlet: DemoDatePickerCustomFormatComponent\n  }, {\n    title: 'Hide on scroll',\n    anchor: 'hide-on-scroll-ex',\n    outlet: DemoDatepickerHideOnScrollComponent\n  }, {\n    title: 'Themes',\n    anchor: 'themes-ex',\n    outlet: DemoDatepickerColorThemingComponent\n  }, {\n    title: 'Locales',\n    anchor: 'locales-ex',\n    outlet: DemoDatepickerChangeLocaleComponent\n  }, {\n    title: 'Min-max',\n    anchor: 'min-max-ex',\n    outlet: DemoDatepickerMinMaxComponent\n  }, {\n    title: 'Days disabled',\n    anchor: 'days-disabled-ex',\n    outlet: DemoDatepickerDaysDisabledComponent\n  }, {\n    title: 'Dates disabled',\n    anchor: 'dates-disabled-ex',\n    outlet: DemoDatepickerDatesDisabledComponent\n  }, {\n    title: 'Dates enabled',\n    anchor: 'dates-enabled-ex',\n    outlet: DemoDatepickerDatesEnabledComponent\n  }, {\n    title: 'Display one month',\n    anchor: 'display-one-month-ex',\n    outlet: DemoDateRangePickerDisplayOneMonth\n  }, {\n    title: 'Min-mode',\n    anchor: 'min-mode-ex',\n    outlet: DemoDatepickerMinModeComponent\n  }, {\n    title: 'Disabled',\n    anchor: 'disabled-datepicker-ex',\n    outlet: DemoDatepickerDisabledComponent\n  }, {\n    title: 'Custom today class',\n    anchor: 'today-class-ex',\n    outlet: DemoDatepickerCustomTodayClassComponent\n  }, {\n    title: 'Forms',\n    anchor: 'forms-ex',\n    outlet: DemoDatepickerFormsComponent\n  }, {\n    title: 'Reactive forms',\n    anchor: 'reactive-forms-ex',\n    outlet: DemoDatepickerReactiveFormsComponent\n  }, {\n    title: 'Return focus to input',\n    anchor: 'return-focus-to-input-ex',\n    outlet: DemoDatePickerReturnFocusToInputComponent\n  }, {\n    title: 'Manual triggering',\n    anchor: 'triggers-manual-ex',\n    outlet: DemoDatepickerTriggersManualComponent\n  }, {\n    title: 'Placement',\n    anchor: 'placement-ex',\n    outlet: DemoDatepickerPlacementComponent\n  }, {\n    title: 'Config method',\n    anchor: 'config-method-ex',\n    outlet: DemoDatepickerConfigMethodComponent\n  }, {\n    title: 'Visibility Events',\n    anchor: 'visibility-events-ex',\n    outlet: DemoDatePickerVisibilityEventsComponent\n  }, {\n    title: 'Value change event',\n    anchor: 'value-change-event-ex',\n    outlet: DemoDatepickerValueChangeEventComponent\n  }, {\n    title: 'Config properties',\n    anchor: 'config-object-ex',\n    outlet: DemoDatePickerConfigObjectComponent\n  }, {\n    title: 'Select dates from other month',\n    anchor: 'select-dates-from-other-month-ex',\n    outlet: DemoDatePickerSelectDatesFromOtherMonthsComponent\n  }, {\n    title: 'Select week',\n    anchor: 'select-week-ex',\n    outlet: DemoDatePickerSelectWeekComponent\n  }, {\n    title: 'Select week range',\n    anchor: 'select-week-range-ex',\n    outlet: DemoDatePickerSelectWeekRangeComponent\n  }, {\n    title: 'Outside click',\n    anchor: 'outside-click-ex',\n    outlet: DemoDatepickerOutsideClickComponent\n  }, {\n    title: 'Trigger by isOpen property',\n    anchor: 'trigger-by-isopen-property-ex',\n    outlet: DemoDatepickerByIsOpenPropComponent\n  }, {\n    title: 'Custom triggers',\n    anchor: 'triggers-custom-ex',\n    outlet: DemoDatepickerTriggersCustomComponent\n  }, {\n    title: 'Date custom classes',\n    anchor: 'date-custom-classes-ex',\n    outlet: DemoDatepickerDateCustomClassesComponent\n  }, {\n    title: 'Tooltip for selected dates',\n    anchor: 'tooltip-for-selected-dates-ex',\n    outlet: DemoDatePickerTooltipToSelectedDates\n  }, {\n    title: 'Quick select ranges',\n    anchor: 'quick-select-ranges-ex',\n    outlet: DemoDatePickerQuickSelectRangesComponent\n  }, {\n    title: 'Prevent change to next month',\n    anchor: 'prevent-change-to-next-month-ex',\n    outlet: DemoDatepickerPreventChangeToNextMonthComponent\n  }, {\n    title: 'Previous month in Daterangepicker',\n    anchor: 'daterangepicker-previous-month-ex',\n    outlet: DemoDateRangePickerShowPreviousMonth\n  }, {\n    title: 'Show Today Button',\n    anchor: 'datepicker-show-today-button-ex',\n    outlet: DemoDatepickerTodayButtonComponent\n  }, {\n    title: 'Show Clear Button',\n    anchor: 'datepicker-show-clear-button-ex',\n    outlet: DemoDatepickerClearButtonComponent\n  }, {\n    title: 'Start view',\n    anchor: 'start-view-ex',\n    outlet: DemoDatepickerStartViewComponent\n  }, {\n    title: 'Max Date Range in Daterangepicker',\n    anchor: 'daterangepicker-max-date-range-ex',\n    outlet: DemoDateRangePickerMaxDateRangeComponent\n  }, {\n    title: 'With timepicker',\n    anchor: 'with-timepicker-ex',\n    outlet: DemoDatepickerWithTimepickerComponent\n  }]\n}];","map":null,"metadata":{},"sourceType":"module"}