{"ast":null,"code":"import { ChangeDetectorRef, ElementRef, QueryList, Renderer2, TemplateRef, EventEmitter } from '@angular/core';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { Subscription } from 'rxjs';\nimport { latinize } from './typeahead-utils';\nimport { typeaheadAnimation } from './typeahead-animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/positioning\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"ulElement\"];\nconst _c1 = [\"liElements\"];\n\nfunction TypeaheadContainerComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction TypeaheadContainerComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n\n  if (rf & 2) {\n    const match_r7 = ctx.match;\n    const query_r8 = ctx.query;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHtml\", ctx_r2.highlight(match_r7, query_r8), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10, 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const match_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(match_r11);\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_ng_template_3_Template(rf, ctx) {}\n\nconst _c2 = function (a0, a1, a2, a3) {\n  return {\n    item: a0,\n    index: a1,\n    match: a2,\n    query: a3\n  };\n};\n\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 12, 11);\n    i0.ɵɵlistener(\"mouseenter\", function TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template_li_mouseenter_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const match_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.selectActive(match_r11);\n    });\n    i0.ɵɵelementStart(2, \"a\", 13);\n    i0.ɵɵlistener(\"click\", function TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template_a_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const match_r11 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.selectMatch(match_r11, $event);\n    });\n    i0.ɵɵtemplate(3, TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext();\n    const match_r11 = ctx_r24.$implicit;\n    const i_r12 = ctx_r24.index;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵclassProp(\"active\", ctx_r14.isActive(match_r11));\n    i0.ɵɵproperty(\"id\", ctx_r14.popupId + \"-\" + i_r12)(\"@typeaheadAnimation\", ctx_r14.animationState);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.itemTemplate || _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(6, _c2, match_r11.item, i_r12, match_r11, ctx_r14.query));\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_3_ng_template_2_li_0_Template, 3, 1, \"li\", 8);\n    i0.ɵɵtemplate(1, TypeaheadContainerComponent_ng_template_3_ng_template_2_li_1_Template, 4, 11, \"li\", 9);\n  }\n\n  if (rf & 2) {\n    const match_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", match_r11.isHeader());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !match_r11.isHeader());\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 5, 6);\n    i0.ɵɵtemplate(2, TypeaheadContainerComponent_ng_template_3_ng_template_2_Template, 2, 2, \"ng-template\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"overflow-y\", ctx_r4.needScrollbar ? \"scroll\" : \"auto\")(\"height\", ctx_r4.needScrollbar ? ctx_r4.guiHeight : \"auto\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.matches);\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_h6_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const match_r26 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(match_r26);\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_ng_template_2_Template(rf, ctx) {}\n\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15, 11);\n    i0.ɵɵlistener(\"click\", function TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const match_r26 = i0.ɵɵnextContext().$implicit;\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.selectMatch(match_r26, $event);\n    })(\"mouseenter\", function TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template_button_mouseenter_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const match_r26 = i0.ɵɵnextContext().$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.selectActive(match_r26);\n    });\n    i0.ɵɵtemplate(2, TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_ng_template_2_Template, 0, 0, \"ng-template\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext();\n    const match_r26 = ctx_r38.$implicit;\n    const i_r27 = ctx_r38.index;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n\n    const _r1 = i0.ɵɵreference(2);\n\n    i0.ɵɵclassProp(\"active\", ctx_r29.isActive(match_r26));\n    i0.ɵɵproperty(\"id\", ctx_r29.popupId + \"-\" + i_r27)(\"@typeaheadAnimation\", ctx_r29.animationState);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r29.itemTemplate || _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(6, _c2, match_r26.item, i_r27, match_r26, ctx_r29.query));\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_5_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_5_ng_template_0_h6_0_Template, 2, 1, \"h6\", 8);\n    i0.ɵɵtemplate(1, TypeaheadContainerComponent_ng_template_5_ng_template_0_ng_template_1_Template, 3, 11, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    const match_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", match_r26.isHeader());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !match_r26.isHeader());\n  }\n}\n\nfunction TypeaheadContainerComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_5_ng_template_0_Template, 2, 2, \"ng-template\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.matches);\n  }\n}\n\nconst _c3 = function (a0, a1, a2, a3) {\n  return {\n    matches: a0,\n    itemTemplate: a1,\n    query: a2,\n    $implicit: a3\n  };\n};\n\nlet nextWindowId = 0;\nexport let TypeaheadContainerComponent = /*#__PURE__*/(() => {\n  class TypeaheadContainerComponent {\n    constructor(positionService, renderer, element, changeDetectorRef) {\n      var _a;\n\n      this.positionService = positionService;\n      this.renderer = renderer;\n      this.element = element;\n      this.changeDetectorRef = changeDetectorRef; // eslint-disable-next-line @angular-eslint/no-output-rename\n\n      this.activeChangeEvent = new EventEmitter();\n      this.isFocused = false;\n      this.positionServiceSubscription = new Subscription();\n      this.height = 0;\n      this.popupId = `ngb-typeahead-${nextWindowId++}`;\n      this._matches = [];\n      this.renderer.setAttribute(this.element.nativeElement, 'id', this.popupId);\n      this.positionServiceSubscription.add((_a = this.positionService.event$) === null || _a === void 0 ? void 0 : _a.subscribe(() => {\n        if (this.isAnimated) {\n          this.animationState = this.isTopPosition ? 'animated-up' : 'animated-down';\n          this.changeDetectorRef.detectChanges();\n          return;\n        }\n\n        this.animationState = 'unanimated';\n        this.changeDetectorRef.detectChanges();\n      }));\n    }\n\n    get isBs4() {\n      return !isBs3();\n    }\n\n    get typeaheadTemplateMethods() {\n      return {\n        selectMatch: this.selectMatch.bind(this),\n        selectActive: this.selectActive.bind(this),\n        isActive: this.isActive.bind(this)\n      };\n    }\n\n    get active() {\n      return this._active;\n    }\n\n    set active(active) {\n      this._active = active;\n      this.activeChanged();\n    }\n\n    get matches() {\n      return this._matches;\n    }\n\n    set matches(value) {\n      var _a;\n\n      this.positionService.setOptions({\n        modifiers: {\n          flip: {\n            enabled: this.adaptivePosition\n          }\n        },\n        allowedPositions: ['top', 'bottom']\n      });\n      this._matches = value;\n      this.needScrollbar = this.typeaheadScrollable && this.typeaheadOptionsInScrollableView < this.matches.length;\n\n      if (this.typeaheadScrollable) {\n        setTimeout(() => {\n          this.setScrollableMode();\n        });\n      }\n\n      if (this.typeaheadIsFirstItemActive && this._matches.length > 0) {\n        this.setActive(this._matches[0]);\n\n        if ((_a = this._active) === null || _a === void 0 ? void 0 : _a.isHeader()) {\n          this.nextActiveMatch();\n        }\n      }\n\n      if (this._active && !this.typeaheadIsFirstItemActive) {\n        const concurrency = this._matches.find(match => {\n          var _a;\n\n          return match.value === ((_a = this._active) === null || _a === void 0 ? void 0 : _a.value);\n        });\n\n        if (concurrency) {\n          this.selectActive(concurrency);\n          return;\n        }\n\n        this.active = void 0;\n      }\n    }\n\n    get isTopPosition() {\n      return this.element.nativeElement.classList.contains('top');\n    }\n\n    get optionsListTemplate() {\n      return this.parent ? this.parent.optionsListTemplate : undefined;\n    }\n\n    get isAnimated() {\n      return this.parent ? this.parent.isAnimated : false;\n    }\n\n    get adaptivePosition() {\n      return this.parent ? this.parent.adaptivePosition : false;\n    }\n\n    get typeaheadScrollable() {\n      return this.parent ? this.parent.typeaheadScrollable : false;\n    }\n\n    get typeaheadOptionsInScrollableView() {\n      return this.parent ? this.parent.typeaheadOptionsInScrollableView : 5;\n    }\n\n    get typeaheadIsFirstItemActive() {\n      return this.parent ? this.parent.typeaheadIsFirstItemActive : true;\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    get itemTemplate() {\n      return this.parent ? this.parent.typeaheadItemTemplate : undefined;\n    }\n\n    get canSelectItemsOnBlur() {\n      var _a;\n\n      return !!((_a = this.parent) === null || _a === void 0 ? void 0 : _a.selectItemOnBlur);\n    }\n\n    selectActiveMatch(isActiveItemChanged) {\n      var _a, _b;\n\n      if (this._active && ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.typeaheadSelectFirstItem)) {\n        this.selectMatch(this._active);\n      }\n\n      if (!((_b = this.parent) === null || _b === void 0 ? void 0 : _b.typeaheadSelectFirstItem) && isActiveItemChanged) {\n        this.selectMatch(this._active);\n      }\n    }\n\n    activeChanged() {\n      if (!this._active) {\n        return;\n      }\n\n      const index = this.matches.indexOf(this._active);\n      this.activeChangeEvent.emit(`${this.popupId}-${index}`);\n    }\n\n    prevActiveMatch() {\n      if (!this._active) {\n        return;\n      }\n\n      const index = this.matches.indexOf(this._active);\n      this.setActive(this.matches[index - 1 < 0 ? this.matches.length - 1 : index - 1]);\n\n      if (this._active.isHeader()) {\n        this.prevActiveMatch();\n      }\n\n      if (this.typeaheadScrollable) {\n        this.scrollPrevious(index);\n      }\n    }\n\n    nextActiveMatch() {\n      var _a;\n\n      const index = this._active ? this.matches.indexOf(this._active) : -1;\n      this.setActive(this.matches[index + 1 > this.matches.length - 1 ? 0 : index + 1]);\n\n      if ((_a = this._active) === null || _a === void 0 ? void 0 : _a.isHeader()) {\n        this.nextActiveMatch();\n      }\n\n      if (this.typeaheadScrollable) {\n        this.scrollNext(index);\n      }\n    }\n\n    selectActive(value) {\n      this.isFocused = true;\n      this.setActive(value);\n    }\n\n    highlight(match, query) {\n      let itemStr = match.value;\n      let itemStrHelper = (this.parent && this.parent.typeaheadLatinize ? latinize(itemStr) : itemStr).toLowerCase();\n      let startIdx;\n      let tokenLen; // Replaces the capture string with the same string inside of a \"strong\" tag\n\n      if (typeof query === 'object') {\n        const queryLen = query.length;\n\n        for (let i = 0; i < queryLen; i += 1) {\n          // query[i] is already latinized and lower case\n          startIdx = itemStrHelper.indexOf(query[i]);\n          tokenLen = query[i].length;\n\n          if (startIdx >= 0 && tokenLen > 0) {\n            itemStr = `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` + `${itemStr.substring(startIdx + tokenLen)}`;\n            itemStrHelper = `${itemStrHelper.substring(0, startIdx)}        ${' '.repeat(tokenLen)}         ` + `${itemStrHelper.substring(startIdx + tokenLen)}`;\n          }\n        }\n      } else if (query) {\n        // query is already latinized and lower case\n        startIdx = itemStrHelper.indexOf(query);\n        tokenLen = query.length;\n\n        if (startIdx >= 0 && tokenLen > 0) {\n          itemStr = `${itemStr.substring(0, startIdx)}<strong>${itemStr.substring(startIdx, startIdx + tokenLen)}</strong>` + `${itemStr.substring(startIdx + tokenLen)}`;\n        }\n      }\n\n      return itemStr;\n    }\n\n    focusLost() {\n      this.isFocused = false;\n\n      if (!this.canSelectItemsOnBlur) {\n        this.setActive(void 0);\n      }\n    }\n\n    isActive(value) {\n      return this.active === value;\n    }\n\n    selectMatch(value, event) {\n      var _a;\n\n      if (event) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      (_a = this.parent) === null || _a === void 0 ? void 0 : _a.changeModel(value);\n      setTimeout(() => {\n        var _a;\n\n        return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.typeaheadOnSelect.emit(value);\n      }, 0);\n      return false;\n    }\n\n    setScrollableMode() {\n      var _a;\n\n      if (!this.ulElement) {\n        this.ulElement = this.element;\n      }\n\n      if ((_a = this.liElements) === null || _a === void 0 ? void 0 : _a.first) {\n        const ulStyles = Utils.getStyles(this.ulElement.nativeElement);\n        const liStyles = Utils.getStyles(this.liElements.first.nativeElement);\n        const ulPaddingBottom = parseFloat((ulStyles['padding-bottom'] ? ulStyles['padding-bottom'] : '').replace('px', ''));\n        const ulPaddingTop = parseFloat((ulStyles['padding-top'] ? ulStyles['padding-top'] : '0').replace('px', ''));\n        const optionHeight = parseFloat((liStyles.height ? liStyles.height : '0').replace('px', ''));\n        const height = this.typeaheadOptionsInScrollableView * optionHeight;\n        this.guiHeight = `${height + ulPaddingTop + ulPaddingBottom}px`;\n      }\n\n      this.renderer.setStyle(this.element.nativeElement, 'visibility', 'visible');\n    }\n\n    scrollPrevious(index) {\n      if (index === 0) {\n        this.scrollToBottom();\n        return;\n      }\n\n      if (this.liElements && this.ulElement) {\n        const liElement = this.liElements.toArray()[index - 1];\n\n        if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n          this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop;\n        }\n      }\n    }\n\n    scrollNext(index) {\n      if (index + 1 > this.matches.length - 1) {\n        this.scrollToTop();\n        return;\n      }\n\n      if (this.liElements && this.ulElement) {\n        const liElement = this.liElements.toArray()[index + 1];\n\n        if (liElement && !this.isScrolledIntoView(liElement.nativeElement)) {\n          this.ulElement.nativeElement.scrollTop = liElement.nativeElement.offsetTop - Number(this.ulElement.nativeElement.offsetHeight) + Number(liElement.nativeElement.offsetHeight);\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      this.positionServiceSubscription.unsubscribe();\n    }\n\n    setActive(value) {\n      var _a;\n\n      this._active = value;\n      let preview;\n\n      if (!(this._active == null || this._active.isHeader())) {\n        preview = value;\n      }\n\n      (_a = this.parent) === null || _a === void 0 ? void 0 : _a.typeaheadOnPreview.emit(preview);\n    }\n\n    isScrolledIntoView(elem) {\n      if (!this.ulElement) {\n        return false;\n      }\n\n      const containerViewTop = this.ulElement.nativeElement.scrollTop;\n      const containerViewBottom = containerViewTop + Number(this.ulElement.nativeElement.offsetHeight);\n      const elemTop = elem.offsetTop;\n      const elemBottom = elemTop + elem.offsetHeight;\n      return elemBottom <= containerViewBottom && elemTop >= containerViewTop;\n    }\n\n    scrollToBottom() {\n      var _a;\n\n      if (!((_a = this.ulElement) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n        return;\n      }\n\n      this.ulElement.nativeElement.scrollTop = this.ulElement.nativeElement.scrollHeight;\n    }\n\n    scrollToTop() {\n      var _a;\n\n      if (!((_a = this.ulElement) === null || _a === void 0 ? void 0 : _a.nativeElement)) {\n        return;\n      }\n\n      this.ulElement.nativeElement.scrollTop = 0;\n    }\n\n  }\n\n  TypeaheadContainerComponent.ɵfac = function TypeaheadContainerComponent_Factory(t) {\n    return new (t || TypeaheadContainerComponent)(i0.ɵɵdirectiveInject(i1.PositioningService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  TypeaheadContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TypeaheadContainerComponent,\n    selectors: [[\"typeahead-container\"]],\n    viewQuery: function TypeaheadContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ulElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.liElements = _t);\n      }\n    },\n    hostAttrs: [1, \"dropdown\", \"open\", \"bottom\", 2, \"position\", \"absolute\", \"display\", \"block\"],\n    hostVars: 9,\n    hostBindings: function TypeaheadContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseleave\", function TypeaheadContainerComponent_mouseleave_HostBindingHandler() {\n          return ctx.focusLost();\n        })(\"blur\", function TypeaheadContainerComponent_blur_HostBindingHandler() {\n          return ctx.focusLost();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.isBs4 ? \"listbox\" : null);\n        i0.ɵɵstyleProp(\"height\", ctx.isBs4 && ctx.needScrollbar ? ctx.guiHeight : \"auto\")(\"visibility\", \"inherit\");\n        i0.ɵɵclassProp(\"dropdown-menu\", ctx.isBs4)(\"dropup\", ctx.dropup);\n      }\n    },\n    outputs: {\n      activeChangeEvent: \"activeChange\"\n    },\n    decls: 7,\n    vars: 7,\n    consts: [[3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"bsItemTemplate\", \"\"], [\"bs3Template\", \"\"], [\"bs4Template\", \"\"], [3, \"innerHtml\"], [\"role\", \"listbox\", 1, \"dropdown-menu\"], [\"ulElement\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"dropdown-header\", 4, \"ngIf\"], [\"role\", \"option\", 3, \"id\", \"active\", \"mouseenter\", 4, \"ngIf\"], [1, \"dropdown-header\"], [\"liElements\", \"\"], [\"role\", \"option\", 3, \"id\", \"mouseenter\"], [\"href\", \"#\", \"tabindex\", \"-1\", 3, \"click\"], [3, \"ngIf\"], [\"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"click\", \"mouseenter\"]],\n    template: function TypeaheadContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TypeaheadContainerComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        i0.ɵɵtemplate(1, TypeaheadContainerComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(3, TypeaheadContainerComponent_ng_template_3_Template, 3, 5, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(5, TypeaheadContainerComponent_ng_template_5_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        const _r3 = i0.ɵɵreference(4);\n\n        const _r5 = i0.ɵɵreference(6);\n\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.optionsListTemplate || (ctx.isBs4 ? _r5 : _r3))(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c3, ctx.matches, ctx.itemTemplate || _r1, ctx.query, ctx.typeaheadTemplateMethods));\n      }\n    },\n    directives: [i2.NgTemplateOutlet, i2.NgForOf, i2.NgIf],\n    styles: [\".dropdown[_nghost-%COMP%]{z-index:1000}.dropdown-menu[_nghost-%COMP%], .dropdown-menu[_ngcontent-%COMP%]{overflow-y:auto;height:100px}\"],\n    data: {\n      animation: [typeaheadAnimation]\n    }\n  });\n  return TypeaheadContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}