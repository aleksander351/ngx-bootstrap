{"ast":null,"code":"import { TypeaheadConfig } from 'ngx-bootstrap/typeahead';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../../../src/typeahead/typeahead.directive\"; // such override allows to keep some initial values\n\nexport function getTypeaheadConfig() {\n  return Object.assign(new TypeaheadConfig(), {\n    hideResultsOnBlur: false\n  });\n}\nexport let DemoTypeaheadConfigComponent = /*#__PURE__*/(() => {\n  class DemoTypeaheadConfigComponent {\n    constructor() {\n      this.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n    }\n\n  }\n\n  DemoTypeaheadConfigComponent.ɵfac = function DemoTypeaheadConfigComponent_Factory(t) {\n    return new (t || DemoTypeaheadConfigComponent)();\n  };\n\n  DemoTypeaheadConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoTypeaheadConfigComponent,\n    selectors: [[\"demo-typeahead-config\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TypeaheadConfig,\n      useFactory: getTypeaheadConfig\n    }])],\n    decls: 1,\n    vars: 2,\n    consts: [[1, \"form-control\", 3, \"ngModel\", \"typeahead\", \"ngModelChange\"]],\n    template: function DemoTypeaheadConfigComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function DemoTypeaheadConfigComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.selected = $event;\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.selected)(\"typeahead\", ctx.states);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.TypeaheadDirective],\n    encapsulation: 2\n  });\n  return DemoTypeaheadConfigComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}