{"ast":null,"code":"import { DemoAlertBasicComponent } from './demos/basic/basic';\nimport { DemoAlertLinkComponent } from './demos/link/link';\nimport { DemoAlertContentComponent } from './demos/content/content';\nimport { DemoAlertDismissComponent } from './demos/dismiss/dismiss';\nimport { DemoAlertDynamicHtmlComponent } from './demos/dynamic-html/dynamic-html';\nimport { DemoAlertDynamicContentComponent } from './demos/dynamic-content/dynamic-content';\nimport { DemoAlertTimeoutComponent } from './demos/dismiss-on-timeout/dismiss-on-timeout';\nimport { DemoAlertStylingGlobalComponent } from './demos/styling-global/styling-global';\nimport { DemoAlertStylingLocalComponent } from './demos/styling-local/styling-local';\nimport { DemoAlertConfigComponent } from './demos/config/config';\nimport { ExamplesComponent } from '@ngx-bootstrap-doc/docs';\nimport { ApiSectionsComponent } from '@ngx-bootstrap-doc/docs';\nimport { NgApiDocComponent, NgApiDocConfigComponent } from '@ngx-bootstrap-doc/docs';\nexport const demoComponentContent = [{\n  name: 'Overview',\n  anchor: 'overview',\n  tabName: 'overview',\n  outlet: ExamplesComponent,\n  content: [{\n    title: 'Basic',\n    anchor: 'basic',\n    description: `<p>Alerts are available for any length of text, as well as an optional dismiss\n          button. For proper styling, use one of the four <strong>required</strong>\n          contextual classes (e.g., <code>.alert-success</code>). For inline\n          dismissal, use the <code>dismissible</code> property.</p>`,\n    component: require('!!raw-loader!./demos/basic/basic'),\n    html: require('!!raw-loader!./demos/basic/basic.html'),\n    outlet: DemoAlertBasicComponent\n  }, {\n    title: 'Link color',\n    anchor: 'link-color',\n    description: `<p>Use the <code>.alert-link</code> utility class to quickly provide matching\n          colored links within any alert.</p>`,\n    component: require('!!raw-loader!./demos/link/link.ts'),\n    html: require('!!raw-loader!./demos/link/link.html'),\n    outlet: DemoAlertLinkComponent\n  }, {\n    title: 'Additional content',\n    anchor: 'additional-content',\n    description: `<p>Alerts can also contain additional HTML elements like headings and\n          paragraphs.</p>`,\n    component: require('!!raw-loader!./demos/content/content.ts'),\n    html: require('!!raw-loader!./demos/content/content.html'),\n    outlet: DemoAlertContentComponent\n  }, {\n    title: 'Dismissing',\n    anchor: 'dismissing',\n    description: `<p>Alerts have <code>dismiss</code> option. Enabling it will show close button\n          to the right of the alert.</p>`,\n    component: require('!!raw-loader!./demos/dismiss/dismiss.ts'),\n    html: require('!!raw-loader!./demos/dismiss/dismiss.html'),\n    outlet: DemoAlertDismissComponent\n  }, {\n    title: 'Dynamic html',\n    anchor: 'dynamic-html',\n    description: `<p>Sometimes you will need to show dynamically generated html in alerts, here\n          is how you can make it. And don't forget to sanitize your html.</p>`,\n    component: require('!!raw-loader!./demos/dynamic-html/dynamic-html.ts'),\n    html: require('!!raw-loader!./demos/dynamic-html/dynamic-html.html'),\n    outlet: DemoAlertDynamicHtmlComponent\n  }, {\n    title: 'Dynamic content',\n    anchor: 'dynamic-content',\n    description: `<p>Alerts fully support bindings.</p>`,\n    component: require('!!raw-loader!./demos/dynamic-content/dynamic-content.ts'),\n    html: require('!!raw-loader!./demos/dynamic-content/dynamic-content.html'),\n    outlet: DemoAlertDynamicContentComponent\n  }, {\n    title: 'Dismiss on timeout',\n    anchor: 'dismiss-on-timeout',\n    description: `<p>You can simply set timeout in milliseconds to <code>dismissOnTimeout</code>\n          property to create self closable alerts.</p>`,\n    component: require('!!raw-loader!./demos/dismiss-on-timeout/dismiss-on-timeout.ts'),\n    html: require('!!raw-loader!./demos/dismiss-on-timeout/dismiss-on-timeout.html'),\n    outlet: DemoAlertTimeoutComponent\n  }, {\n    title: 'Global styling',\n    anchor: 'global-styling',\n    description: `<p>You can add additional types of alerts globally.</p>`,\n    component: require('!!raw-loader!./demos/styling-global/styling-global.ts'),\n    html: require('!!raw-loader!./demos/styling-global/styling-global.html'),\n    outlet: DemoAlertStylingGlobalComponent\n  }, {\n    title: 'Component level styling',\n    anchor: 'local-styling',\n    description: `<p>You can add additional types of alerts directly to containing component</p>`,\n    component: require('!!raw-loader!./demos/styling-local/styling-local.ts'),\n    html: require('!!raw-loader!./demos/styling-local/styling-local.html'),\n    outlet: DemoAlertStylingLocalComponent\n  }, {\n    title: 'Configuring defaults',\n    anchor: 'configuration',\n    description: `<p>It is possible to override default alert config partially or completely.</p>`,\n    component: require('!!raw-loader!./demos/config/config.ts'),\n    html: require('!!raw-loader!./demos/config/config.html'),\n    outlet: DemoAlertConfigComponent\n  }]\n}, {\n  name: 'Installation',\n  anchor: 'api-reference',\n  tabName: 'api',\n  usage: require('!!raw-loader!./docs/usage.md'),\n  importInfo: '<span class=\"pln\">ng add ngx</span><span class=\"pun\">-</span><span class=\"pln\">bootstrap </span> --component <span class=\"pln\">alerts</span>',\n  outlet: ApiSectionsComponent,\n  content: [{\n    title: 'AlertComponent',\n    anchor: 'alert-component',\n    outlet: NgApiDocComponent\n  }, {\n    title: 'AlertConfig',\n    anchor: 'alert-config',\n    outlet: NgApiDocConfigComponent\n  }]\n}, {\n  name: 'Examples',\n  anchor: 'examples',\n  tabName: 'examples',\n  outlet: ExamplesComponent,\n  content: [{\n    title: 'Basic',\n    anchor: 'basic-ex',\n    outlet: DemoAlertBasicComponent\n  }, {\n    title: 'Link color',\n    anchor: 'link-color-ex',\n    outlet: DemoAlertLinkComponent\n  }, {\n    title: 'Additional content',\n    anchor: 'additional-content-ex',\n    outlet: DemoAlertContentComponent\n  }, {\n    title: 'Dismissing',\n    anchor: 'dismissing-ex',\n    outlet: DemoAlertDismissComponent\n  }, {\n    title: 'Dynamic html',\n    anchor: 'dynamic-html-ex',\n    outlet: DemoAlertDynamicHtmlComponent\n  }, {\n    title: 'Dynamic content',\n    anchor: 'dynamic-content-ex',\n    outlet: DemoAlertDynamicContentComponent\n  }, {\n    title: 'Dismiss on timeout',\n    anchor: 'dismiss-on-timeout-ex',\n    outlet: DemoAlertTimeoutComponent\n  }, {\n    title: 'Global styling',\n    anchor: 'global-styling-ex',\n    outlet: DemoAlertStylingGlobalComponent\n  }, {\n    title: 'Component level styling',\n    anchor: 'local-styling-ex',\n    outlet: DemoAlertStylingLocalComponent\n  }, {\n    title: 'Configuring defaults',\n    anchor: 'configuration-ex',\n    outlet: DemoAlertConfigComponent\n  }]\n}];","map":null,"metadata":{},"sourceType":"module"}