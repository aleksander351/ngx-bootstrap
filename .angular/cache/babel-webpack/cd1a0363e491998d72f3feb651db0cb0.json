{"ast":null,"code":"import { EventEmitter, forwardRef, Provider } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\nimport { DatepickerConfig } from './datepicker.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./datepicker.config\";\nimport * as i2 from \"./datepicker-inner.component\";\nimport * as i3 from \"./daypicker.component\";\nimport * as i4 from \"./monthpicker.component\";\nimport * as i5 from \"./yearpicker.component\";\nexport const DATEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DatePickerComponent),\n  multi: true\n};\nexport let DatePickerComponent = /*#__PURE__*/(() => {\n  class DatePickerComponent {\n    constructor(config) {\n      /** sets datepicker mode, supports: `day`, `month`, `year` */\n      this.datepickerMode = 'day';\n      /** if false week numbers will be hidden */\n\n      this.showWeeks = true;\n      /** number of months displayed in a single row of month picker */\n\n      this.monthColLimit = 3;\n      /** number of years displayed in a single row of year picker */\n\n      this.yearColLimit = 5;\n      this.selectionDone = new EventEmitter(undefined);\n      /** callback to invoke when the activeDate is changed. */\n\n      this.activeDateChange = new EventEmitter(undefined); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      this.onChange = Function.prototype; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      this.onTouched = Function.prototype;\n      this._now = new Date();\n      this.config = config;\n      this.configureOptions();\n    }\n    /** currently active date */\n\n\n    get activeDate() {\n      return this._activeDate || this._now;\n    }\n\n    set activeDate(value) {\n      this._activeDate = value;\n    }\n\n    configureOptions() {\n      Object.assign(this, this.config);\n    }\n\n    onUpdate(event) {\n      this.activeDate = event;\n      this.onChange(event);\n    }\n\n    onSelectionDone(event) {\n      this.selectionDone.emit(event);\n    }\n\n    onActiveDateChange(event) {\n      this.activeDateChange.emit(event);\n    } // todo: support null value\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    writeValue(value) {\n      var _a, _b;\n\n      if (((_a = this._datePicker) === null || _a === void 0 ? void 0 : _a.compare(value, this._activeDate)) === 0) {\n        return;\n      }\n\n      if (value && value instanceof Date) {\n        this.activeDate = value;\n        (_b = this._datePicker) === null || _b === void 0 ? void 0 : _b.select(value, false);\n        return;\n      }\n\n      this.activeDate = value ? new Date(value) : void 0;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n  }\n\n  DatePickerComponent.ɵfac = function DatePickerComponent_Factory(t) {\n    return new (t || DatePickerComponent)(i0.ɵɵdirectiveInject(i1.DatepickerConfig));\n  };\n\n  DatePickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatePickerComponent,\n    selectors: [[\"datepicker\"]],\n    viewQuery: function DatePickerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DatePickerInnerComponent, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._datePicker = _t.first);\n      }\n    },\n    inputs: {\n      datepickerMode: \"datepickerMode\",\n      initDate: \"initDate\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      minMode: \"minMode\",\n      maxMode: \"maxMode\",\n      showWeeks: \"showWeeks\",\n      formatDay: \"formatDay\",\n      formatMonth: \"formatMonth\",\n      formatYear: \"formatYear\",\n      formatDayHeader: \"formatDayHeader\",\n      formatDayTitle: \"formatDayTitle\",\n      formatMonthTitle: \"formatMonthTitle\",\n      startingDay: \"startingDay\",\n      yearRange: \"yearRange\",\n      onlyCurrentMonth: \"onlyCurrentMonth\",\n      shortcutPropagation: \"shortcutPropagation\",\n      monthColLimit: \"monthColLimit\",\n      yearColLimit: \"yearColLimit\",\n      customClass: \"customClass\",\n      dateDisabled: \"dateDisabled\",\n      dayDisabled: \"dayDisabled\",\n      activeDate: \"activeDate\"\n    },\n    outputs: {\n      selectionDone: \"selectionDone\",\n      activeDateChange: \"activeDateChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([DATEPICKER_CONTROL_VALUE_ACCESSOR])],\n    decls: 4,\n    vars: 24,\n    consts: [[3, \"activeDate\", \"locale\", \"datepickerMode\", \"initDate\", \"minDate\", \"maxDate\", \"minMode\", \"maxMode\", \"showWeeks\", \"formatDay\", \"formatMonth\", \"formatYear\", \"formatDayHeader\", \"formatDayTitle\", \"formatMonthTitle\", \"startingDay\", \"yearRange\", \"customClass\", \"dateDisabled\", \"dayDisabled\", \"onlyCurrentMonth\", \"shortcutPropagation\", \"monthColLimit\", \"yearColLimit\", \"update\", \"selectionDone\", \"activeDateChange\"], [\"tabindex\", \"0\"]],\n    template: function DatePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"datepicker-inner\", 0);\n        i0.ɵɵlistener(\"update\", function DatePickerComponent_Template_datepicker_inner_update_0_listener($event) {\n          return ctx.onUpdate($event);\n        })(\"selectionDone\", function DatePickerComponent_Template_datepicker_inner_selectionDone_0_listener($event) {\n          return ctx.onSelectionDone($event);\n        })(\"activeDateChange\", function DatePickerComponent_Template_datepicker_inner_activeDateChange_0_listener($event) {\n          return ctx.onActiveDateChange($event);\n        });\n        i0.ɵɵelement(1, \"daypicker\", 1);\n        i0.ɵɵelement(2, \"monthpicker\", 1);\n        i0.ɵɵelement(3, \"yearpicker\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"activeDate\", ctx.activeDate)(\"locale\", ctx.config.locale)(\"datepickerMode\", ctx.datepickerMode)(\"initDate\", ctx.initDate)(\"minDate\", ctx.minDate)(\"maxDate\", ctx.maxDate)(\"minMode\", ctx.minMode)(\"maxMode\", ctx.maxMode)(\"showWeeks\", ctx.showWeeks)(\"formatDay\", ctx.formatDay)(\"formatMonth\", ctx.formatMonth)(\"formatYear\", ctx.formatYear)(\"formatDayHeader\", ctx.formatDayHeader)(\"formatDayTitle\", ctx.formatDayTitle)(\"formatMonthTitle\", ctx.formatMonthTitle)(\"startingDay\", ctx.startingDay)(\"yearRange\", ctx.yearRange)(\"customClass\", ctx.customClass)(\"dateDisabled\", ctx.dateDisabled)(\"dayDisabled\", ctx.dayDisabled)(\"onlyCurrentMonth\", ctx.onlyCurrentMonth)(\"shortcutPropagation\", ctx.shortcutPropagation)(\"monthColLimit\", ctx.monthColLimit)(\"yearColLimit\", ctx.yearColLimit);\n      }\n    },\n    directives: [i2.DatePickerInnerComponent, i3.DayPickerComponent, i4.MonthPickerComponent, i5.YearPickerComponent],\n    encapsulation: 2\n  });\n  return DatePickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}