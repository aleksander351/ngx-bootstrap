{"ast":null,"code":"import { ProgressbarConfig } from 'ngx-bootstrap/progressbar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../../../src/progressbar/progressbar.component\"; // such override allows to keep some initial values\n\nexport function getProgressbarConfig() {\n  return Object.assign(new ProgressbarConfig(), {\n    animate: true,\n    striped: true,\n    max: 150\n  });\n}\nexport let DemoProgressbarConfigComponent = /*#__PURE__*/(() => {\n  class DemoProgressbarConfigComponent {}\n\n  DemoProgressbarConfigComponent.ɵfac = function DemoProgressbarConfigComponent_Factory(t) {\n    return new (t || DemoProgressbarConfigComponent)();\n  };\n\n  DemoProgressbarConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoProgressbarConfigComponent,\n    selectors: [[\"demo-progressbar-config\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: ProgressbarConfig,\n      useFactory: getProgressbarConfig\n    }])],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"mb-2\"], [\"type\", \"danger\", 1, \"progress-striped\", \"active\", 3, \"value\"]],\n    template: function DemoProgressbarConfigComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"progressbar\", 1);\n        i0.ɵɵelementStart(2, \"i\");\n        i0.ɵɵtext(3, \"136 / 150\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", 136);\n      }\n    },\n    directives: [i1.ProgressbarComponent],\n    encapsulation: 2\n  });\n  return DemoProgressbarConfigComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}