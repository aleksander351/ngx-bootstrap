{"ast":null,"code":"import { shiftDate, formatDate } from 'ngx-bootstrap/chronos';\nimport { createMatrix } from '../utils/matrix-utils';\nconst height = 4;\nconst width = 4;\nexport const yearsPerCalendar = height * width;\nexport const initialYearShift = (Math.floor(yearsPerCalendar / 2) - 1) * -1;\nconst shift = {\n  year: 1\n};\nexport function formatYearsCalendar(viewDate, formatOptions, previousInitialDate) {\n  const initialDate = calculateInitialDate(viewDate, previousInitialDate);\n  const matrixOptions = {\n    width,\n    height,\n    initialDate,\n    shift\n  };\n  const yearsMatrix = createMatrix(matrixOptions, date => ({\n    date,\n    label: formatDate(date, formatOptions.yearLabel, formatOptions.locale)\n  }));\n  const yearTitle = formatYearRangeTitle(yearsMatrix, formatOptions);\n  return {\n    years: yearsMatrix,\n    monthTitle: '',\n    yearTitle,\n    hideLeftArrow: false,\n    hideRightArrow: false,\n    disableLeftArrow: false,\n    disableRightArrow: false\n  };\n}\n\nfunction calculateInitialDate(viewDate, previousInitialDate) {\n  if (previousInitialDate && viewDate.getFullYear() >= previousInitialDate.getFullYear() && viewDate.getFullYear() < previousInitialDate.getFullYear() + yearsPerCalendar) {\n    return previousInitialDate;\n  }\n\n  return shiftDate(viewDate, {\n    year: initialYearShift\n  });\n}\n\nfunction formatYearRangeTitle(yearsMatrix, formatOptions) {\n  const from = formatDate(yearsMatrix[0][0].date, formatOptions.yearTitle, formatOptions.locale);\n  const to = formatDate(yearsMatrix[height - 1][width - 1].date, formatOptions.yearTitle, formatOptions.locale);\n  return `${from} - ${to}`;\n}","map":null,"metadata":{},"sourceType":"module"}