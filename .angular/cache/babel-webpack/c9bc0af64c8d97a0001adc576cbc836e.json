{"ast":null,"code":"import { TooltipConfig } from 'ngx-bootstrap/tooltip';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/tooltip\"; // such override allows to keep some initial values\n\nexport function getAlertConfig() {\n  return Object.assign(new TooltipConfig(), {\n    placement: 'right',\n    container: 'body',\n    delay: 500\n  });\n}\nexport let DemoTooltipConfigComponent = /*#__PURE__*/(() => {\n  class DemoTooltipConfigComponent {}\n\n  DemoTooltipConfigComponent.ɵfac = function DemoTooltipConfigComponent_Factory(t) {\n    return new (t || DemoTooltipConfigComponent)();\n  };\n\n  DemoTooltipConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DemoTooltipConfigComponent,\n    selectors: [[\"demo-tooltip-config\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TooltipConfig,\n      useFactory: getAlertConfig\n    }])],\n    decls: 2,\n    vars: 0,\n    consts: [[\"type\", \"button\", \"tooltip\", \"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\", 1, \"btn\", \"btn-primary\"]],\n    template: function DemoTooltipConfigComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵtext(1, \" Preconfigured tooltip\\n\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.TooltipDirective],\n    encapsulation: 2\n  });\n  return DemoTooltipConfigComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}